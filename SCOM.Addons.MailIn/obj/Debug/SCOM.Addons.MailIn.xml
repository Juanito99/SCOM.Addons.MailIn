<?xml version="1.0" encoding="utf-8"?>
<ManagementPack SchemaVersion="2.0" ContentReadable="true" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Manifest>
    <Identity>
      <ID>SCOM.Addons.MailIn</ID>
      <Version>1.0.0.140</Version>
    </Identity>
    <Name>SCOM.Addons.MailIn</Name>
    <References>
      <Reference Alias="SC">
        <ID>Microsoft.SystemCenter.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Windows">
        <ID>Microsoft.Windows.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Health">
        <ID>System.Health.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="System">
        <ID>System.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
    </References>
  </Manifest>
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="SCOM.Addons.MailIn.MonitoringServer" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.ComputerRole" Hosted="true" Singleton="false" Extension="false">
          <Property ID="SmtpServerName" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" Required="false" Scale="0" />
          <Property ID="XMLConfigFilePath" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" Required="true" Scale="0" />
          <Property ID="EmlDirectory" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" Required="false" Scale="0" />
          <Property ID="EmlArchive" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" Required="false" Scale="0" />
        </ClassType>
        <ClassType ID="SCOM.Addons.MailIn.MailMonitorItem" Accessibility="Public" Abstract="true" Base="System!System.LogicalEntity" Hosted="false" Singleton="false" Extension="false">
          <Property ID="UniqueTitle" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" Required="true" Scale="0" />
          <Property ID="Description" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" Required="false" Scale="0" />
          <Property ID="MailFrom" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" Required="true" Scale="0" />
          <Property ID="MailSubject" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" Required="false" Scale="0" />
          <Property ID="MailBody" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" Required="false" Scale="0" />
          <Property ID="MailSourceServer" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" Required="false" Scale="0" />
          <Property ID="SCOMAlertResetType" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" Required="true" Scale="0" />
          <Property ID="SCOMAlertResetTimeInSeconds" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" Required="false" Scale="0" />
        </ClassType>
        <ClassType ID="SCOM.Addons.MailIn.MailMonitorItem.ManualReset" Accessibility="Public" Abstract="false" Base="SCOM.Addons.MailIn.MailMonitorItem" Hosted="false" Singleton="false" Extension="false" />
        <ClassType ID="SCOM.Addons.MailIn.MailMonitorItem.TimerReset" Accessibility="Public" Abstract="false" Base="SCOM.Addons.MailIn.MailMonitorItem" Hosted="false" Singleton="false" Extension="false" />
      </ClassTypes>
    </EntityTypes>
    <ModuleTypes>
      <DataSourceModuleType ID="SCOM.Addons.MailIn.TestNode.PropertyBag.Filtered" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="UniqueTitle" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="XMLConfigFilePath" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SCOMAlertResetType" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="EmlDirectory" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="EmlArchive" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="NoOfLinesFromTop" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="XMLConfigFilePath" Selector="$Config/XMLConfigFilePath$" ParameterType="string" />
          <OverrideableParameter ID="SCOMAlertResetType" Selector="$Config/SCOMAlertResetType$" ParameterType="string" />
          <OverrideableParameter ID="EmlDirectory" Selector="$Config/EmlDirectory$" ParameterType="string" />
          <OverrideableParameter ID="EmlArchive" Selector="$Config/EmlArchive$" ParameterType="string" />
          <OverrideableParameter ID="NoOfLinesFromTop" Selector="$Config/NoOfLinesFromTop$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="DS" TypeID="SCOM.Addons.MailIn.TestNode.PropertyBag">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
                <UniqueTitle>$Config/UniqueTitle$</UniqueTitle>
                <XMLConfigFilePath>$Config/XMLConfigFilePath$</XMLConfigFilePath>
                <SCOMAlertResetType>$Config/SCOMAlertResetType$</SCOMAlertResetType>
                <EmlDirectory>$Config/EmlDirectory$</EmlDirectory>
                <EmlArchive>$Config/EmlArchive$</EmlArchive>
                <NoOfLinesFromTop>$Config/NoOfLinesFromTop$</NoOfLinesFromTop>
              </DataSource>
              <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">Property[@Name="UniqueTitle"]</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="String">$Config/UniqueTitle$</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="Filter">
                <Node ID="DS" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="SCOM.Addons.MailIn.TestNode.PropertyBag" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="UniqueTitle" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="XMLConfigFilePath" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SCOMAlertResetType" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="EmlDirectory" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="EmlArchive" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="NoOfLinesFromTop" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="XMLConfigFilePath" Selector="$Config/XMLConfigFilePath$" ParameterType="string" />
          <OverrideableParameter ID="SCOMAlertResetType" Selector="$Config/SCOMAlertResetType$" ParameterType="string" />
          <OverrideableParameter ID="EmlDirectory" Selector="$Config/EmlDirectory$" ParameterType="string" />
          <OverrideableParameter ID="EmlArchive" Selector="$Config/EmlArchive$" ParameterType="string" />
          <OverrideableParameter ID="NoOfLinesFromTop" Selector="$Config/NoOfLinesFromTop$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Schedule" TypeID="System!System.SimpleScheduler">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ProbeAction ID="Probe" TypeID="SCOM.Addons.MailIn.TestNode.Probe">
                <XMLConfigFilePath>$Config/XMLConfigFilePath$</XMLConfigFilePath>
                <SCOMAlertResetType>$Config/SCOMAlertResetType$</SCOMAlertResetType>
                <EmlDirectory>$Config/EmlDirectory$</EmlDirectory>
                <EmlArchive>$Config/EmlArchive$</EmlArchive>
                <NoOfLinesFromTop>$Config/NoOfLinesFromTop$</NoOfLinesFromTop>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Probe">
                <Node ID="Schedule" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="SCOM.Addons.MailIn.Alert.Rule.Datasource" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element minOccurs="1" type="xsd:integer" name="IntervalSeconds" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="0" type="xsd:string" name="SyncTime" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" type="xsd:integer" name="TimeoutSeconds" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" type="xsd:string" name="EmlDirectory" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" type="xsd:string" name="EmlArchive" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="0" type="xsd:integer" name="NoOfLinesFromTop" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="XMLConfigFilePath" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="EmlDirectory" Selector="$Config/EmlDirectory$" ParameterType="string" />
          <OverrideableParameter ID="EmlArchive" Selector="$Config/EmlArchive$" ParameterType="string" />
          <OverrideableParameter ID="NoOfLinesFromTop" Selector="$Config/NoOfLinesFromTop$" ParameterType="int" />
          <OverrideableParameter ID="XMLConfigFilePath" Selector="$Config/XMLConfigFilePath$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.Scheduler">
                <Scheduler>
                  <SimpleReccuringSchedule>
                    <Interval Unit="Seconds">$Config/IntervalSeconds$</Interval>
                    <SyncTime>$Config/SyncTime$</SyncTime>
                  </SimpleReccuringSchedule>
                  <ExcludeDates />
                </Scheduler>
              </DataSource>
              <ProbeAction ID="PA" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
                <ScriptName>Generic-MailMonitorRule.ps1</ScriptName>
                <ScriptBody><![CDATA[param($sourceId, $managedEntityId, $NoOfLinesFromTop, $EmlDirectory, $EmlArchive, $XMLConfigFilePath)

$api  = New-Object -ComObject 'MOM.ScriptAPI'

$Global:Error.Clear()
$ErrorActionPreference = 'Continue'

$xmlConfigDir  = (Get-Item -Path $XMLConfigFilePath).DirectoryName

$api.LogScriptEvent('SCOM.Addons.MailIn Generic-MailMonitorRule.ps1',3000,4,"SCOM Addons MailIn Rule Started - Source $($sourceId) `
	managEnt $($managedEntityId) EmlDir: $($EmlDirectory) EmlArc: $($EmlArchive) #LinesFT:$($NoOfLinesFromTop)  ")

if (Test-Path -Path $EmlDirectory) {
	$foo = "bar"
} else {
	$api.LogScriptEvent('SCOM.Addons.MailIn Generic-MailMonitorRule.ps1',3030,1,"SCOM Addons MailIn Rule - EmlFolder not found!  Looking for: $($EmlDirectory) Script ended.")
	exit 		
}

if (Test-Path -Path $EmlArchive) {
	$foo = "bar"
} else {
	$api.LogScriptEvent('SCOM.Addons.MailIn Generic-MailMonitorRule.ps1',3030,2,"SCOM Addons MailIn Rule - EmlArchive folder not found!  Looking for: $($EmlArchive). Folder will be created now.")
	New-Item -Path $EmlArchive	 		
}

Function Convert-EmlFile {    

	param  (        
		$EmlFileName
	)
		
	$adoStream = New-Object -ComObject 'ADODB.Stream'  
	$adoStream.Open()
	$adoStream.LoadFromFile($EmlFileName)    
	$cdoMessageObject = New-Object -ComObject 'CDO.Message'    
	$cdoMessageObject.DataSource.OpenObject($adoStream, '_Stream')
	
	return $cdoMessageObject

} #End Function Convert-EmlFile

$emlFiles = Get-ChildItem -Path $EmlDirectory -Filter *.eml

$api.LogScriptEvent('SCOM.Addons.MailIn Generic-MailMonitorRule.ps1',3001,4,"SCOM Addons MailIn - `
	Found No: EML Messages: $($emlFiles.count)")

$allMails = New-object -TypeName System.Collections.Generic.List[psobject]

$regPatReceived = '(?i)(<?Received: from )[\w\.\- ()\[\]]+by'

#preparing objects
foreach ($eml in $emlFiles) {
 
  $bodyHTML = ''
  $bodyText = ''
	
  $emlContent   = Get-Content $eml.FullName -TotalCount 100

  $recvdNo      = [regex]::Matches($emlContent, $regPatReceived).count
  $recvdNoIndex = $recvdNo -1
  $receivedBy   = [regex]::Matches($emlContent, $regPatReceived)[$recvdNoIndex].Value
  $receivedBy   = [regex]::Replace($receivedBy,'(?i)Received: from |(?i) by','')
	
  $emlObj = Convert-EmlFile -EmlFileName $eml.FullName
  
  $bodyHTML = $emlObj.HTMLBody
  $bodyText = $emlObJ.TextBody

  if ($bodyHTML -eq $null -or $bodyHTML -eq '') { $bodyHTML = 'n.a.' } 
  if ($bodyText -eq $null -or $bodyText -eq '') { $bodyText = 'n.a.' }
  if ($bodyText -eq 'n.a.') { $bodyText = $bodyHTML }

  $bodyText = [Regex]::Replace($bodyText,'<[^>]*>',' ')
  $bodyText =[Regex]::Replace($bodyText,'\\s+',' ')
  $bodyText = $bodyText.Trim()
  
  $mailProps = @{
	mailFrom         = $emlObj.From          -replace '\s','_'
	mailBody         = $bodyText 
	mailSubject      = $emlObj.Subject       -replace '\s','_'
	mailReceived     = $emlobj.ReceivedTime
	mailSendTime     = $emlObj.SentOn
	mailRecipient    = $emlObj.To
	mailSourceServer = $receivedBy           -replace '\s','_'
	mailFileName     = $eml.FullName    
  }

  $mailObject = New-Object -TypeName psobject -Property $mailProps 
  $allMails.Add($mailObject)  

} #end foreach ($eml in $emlFiles) {}


#getting all defined monitors
$allMailMonitorItems = New-object -TypeName System.Collections.Generic.List[psobject]

$xmlFile = [xml](Get-Content -Path $XMLConfigFilePath)

foreach($itm in $xmlFile.MailInMonitorList.MailMonitorItem) {
	  
  [string]$uniqueTitle                 = $itm.UniqueTitle		-replace '\s','_'
  [string]$description                 = $itm.Description		
  [string]$mailFrom                    = $itm.MailFrom			-replace '\s','_'
  [string]$mailSubject                 = $itm.MailSubject		-replace '\s','_'
  [string]$mailBody                    = $itm.MailBody			
  [string]$mailSourceServer            = $itm.MailSourceServer	-replace '\s','_'
  [string]$SCOMAlertResetType          = $itm.SCOMAlertResetType
  [string]$SCOMAlertResetTimeInSeconds = $itm.SCOMAlertResetTimeInSeconds

  if ([String]::IsNullOrEmpty($uniqueTitle)) { 
	$api.LogScriptEvent('SCOM.Addons.MailIn Generic-MailMonitorRule.ps1',3110,2,"MailItem: $description $mailFrom $mailSubject `
	$mailBody $mailSourceServer has no UniqueTitle. Skipped! . ")
	continue
	}

  if ([String]::IsNullOrEmpty($mailFrom)) { 
	$api.LogScriptEvent('SCOM.Addons.MailIn Generic-MailMonitorRule.ps1',3110,2,"MailItem: $description $uniqueTitle $mailSubject `
	$mailBody $mailSourceServer has no MailFrom. Skipped! . ")
	continue
  }
  if ([String]::IsNullOrEmpty($SCOMAlertResetType)) { 
	$api.LogScriptEvent('SCOM.Addons.MailIn Generic-MailMonitorRule.ps1',3110,4,"MailItem: $description $mailFrom $mailSubject `
	$mailBody $mailSourceServer $uniqueTitle has SCOMAlertResetType, defaulting to TIMER based.. ")
	$SCOMAlertResetType = "Timer"
  }

  if ([String]::IsNullOrEmpty($description))      { $description = "" }  
  if ([String]::IsNullOrEmpty($mailSubject))      { $mailSubject = "" }
  if ([String]::IsNullOrEmpty($mailBody))         { $mailBody = "" }
  if ([String]::IsNullOrEmpty($mailSourceServer)) { $mailSourceServer = "" }

  $mItmProps = @{
	UniqueTitle                 = $uniqueTitle
	Description                 = $description
	MailFrom                    = $mailFrom
	MailSubject                 = $mailSubject
	MailBody                    = $mailBody
	MailSourceServer            = $mailSourceServer
	SCOMAlertResetType          = $SCOMAlertResetType
	SCOMAlertResetTimeInSeconds = $SCOMAlertResetTimeInSeconds
  }

  $mItmObj = New-Object -TypeName psobject -Property $mItmProps 

  $allMailMonitorItems.Add($mItmObj)

} #end foreach($itm in $xmlFile.MailInMonitorList.MailMonitorItem) {}

$api.LogScriptEvent('SCOM.Addons.MailIn Generic-MailMonitorRule.ps1',3111,2,"allMonitorItems Count: $($allMailMonitorItems.count)  ")

$allAlertMails = New-object -TypeName System.Collections.Generic.List[psobject]

foreach ($mail in $allMails) {
	
	foreach ($mItem in $allMailMonitorItems) {
	
		$bSendAlert     = $false

		$fiSubject      = ''
		$fiFrom         = ''
		$fiBody         = ''
		$fiSourceServer = ''
		$fiUniqueTitle  = ''
		$fiAlertTimer   = ''
		
		$bMailFrom         = $false
		$bMailSubject      = $false
		$bMailSourceServer = $false
		$bMailBody         = $false
				
		$fiSubject      = $mItem.MailSubject
		$fiFrom         = $mItem.mailFrom
		$fiBody         = $mItem.MailBody
		$fiSourceServer = $mItem.MailSourceServer  
		$fiUniqueTitle  = $mItem.UniqueTitle  
		$fiAlertTimer   = $mItem.SCOMAlertResetTimeInSeconds
	
		if ($fiFrom -ne '') {
			if ($($mail.mailFrom) -match "$($fiFrom)") { 		
				$bMailFrom = $true
			} else { 		
				$bMailFrom = $false 
			} 			  
		}
		if ($fiSubject -ne '') {
			if ($mail.mailSubject -match "$($fiSubject)") {        		
				$bMailSubject = $true
			} else { 		
				$bMailSubject = $false
			}
		}	
		if ($fiSourceServer -ne '')	{
			if ($mail.mailSourceServer -match "$($fiSourceServer)") { 		
				$bMailSourceServer = $true
			} else { 		
				$bMailSourceServer = $false
			}
		}
		if ($fiBody -ne '') {
			if ($mail.mailBody -match "$($fiBody)") { 			
				$bMailBody = $true
			} else { 			
				$bMailBody = $false
			}
		}		

		if ($fiFrom -ne '' -and $fiSubject -ne '' -and $fiSourceServer -ne '' -and $fiBody -ne '') {
			if ($bMailFrom -and $bMailSubject -and $bMailSourceServer -and $bMailBody) {		  
				$bSendAlert = $true		
			}
		} elseif ($fiFrom -ne '' -and $fiSubject -ne '' -and $fiSourceServer -ne '') {
			if ($bMailFrom -and $bMailSubject -and $bMailSourceServer)  {		  		
				$bSendAlert = $true		  
			}
		} elseif ($fiFrom -ne '' -and $fiSubject -ne '') {
			if ($bMailFrom -and $bMailSubject)  {		  		
				$bSendAlert = $true		  
			}      
		} elseif ($fiFrom -ne '' -and $fiSourceServer -ne '') {
			if ($bMailFrom -and $bMailSourceServer) {		  
				$bSendAlert = $true		  
			}      
		} elseif ($fiFrom -ne '' -and $fiBody -ne '') {
			if ($bMailFrom -and $bMailBody) {		  		  		  
				$bSendAlert      = $true		  
			}          
		} elseif ($fiSourceServer -ne '' -and $fiBody -ne '') {
			if ($bMailSourceServer -and $bMailBody) {				
				$bSendAlert = $true		
			}          
		} 

		if ($bSendAlert) {

			$foo = 'Will be handled as Monitor.'
			$allAlertMails.Add($mail)
		
		} # end if ($bSendAlert -eq $true)

	} # end foreach ($mItem in $filteredItems) {}

} # end foreach ($mail in $allMails) {}

$allEmlForRule  = Compare-Object -ReferenceObject $allMails -DifferenceObject $allAlertMails -Property mailFileName | Select-Object -ExpandProperty mailFileName

foreach ($emlForRule in $allEmlForRule) {

	$mail = $allMails | Where-Object {$_.mailFileName -eq $emlForRule }
	
	$mMetaInfo  = "`nSend at:`t$($mail.mailSendTime)`nReceived at:`t$($mail.mailReceived)`nAddressed to:`t$($mail.mailRecipient)`
			`nSend by Host:`t$($mail.mailSourceServer)`nSubject:`t$($mail.mailSubject)`nBody:`t$($mail.mailBody) "				

	$api.LogScriptEvent('SCOM.Addons.MailIn Generic-MailMonitorRule.ps1',3200,4,"SCOM Addons MailIn Rule BAG `n `
	mail.MailSubject $($mail.mailSubject) `n `
	mail.mailFrom $($mail.mailFrom) `n `
	mail.mailSubject $($mail.mailSubject) `
	mail.mailBody: $($mail.mailBody) `n  `				 
	mail.mailSourceServer $($mail.mailSourceServer) `n
	`n`n mMetaInfo: $($mMetaInfo) " )

	$bag = $api.CreatePropertybag()					
	$bag.AddValue("mSubject",$mail.mailSubject)	
	$bag.AddValue("mFrom",$mail.mailFrom)
	$bag.AddValue("mBody",$mail.mailBody)	
	$bag.AddValue("mMetaInfo",$mMetaInfo)		
	$bag.AddValue("Result","BAD")		
	$bag

	$monFileName = "_AlertRaised_viaRule_" + $($mail.MailSubject) + "_DoNotDelete_.txt" 
	$null = New-Item -Path $xmlConfigDir -ItemType File -Name $monFileName -Value $mMetaInfo -Force
						
	Move-Item -Path $mail.mailFileName -Destination $emlArchive -Force		

}

]]></ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>EmlDirectory</Name>
                    <Value>$Config/EmlDirectory$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>EmlArchive</Name>
                    <Value>$Config/EmlArchive$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>NoOfLinesFromTop</Name>
                    <Value>$Config/NoOfLinesFromTop$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>XMLConfigFilePath</Name>
                    <Value>$Config/XMLConfigFilePath$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PA">
                <Node ID="Scheduler" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="SCOM.Addons.MailIn.CleanEmlArchive.Rule.Datasource" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element minOccurs="1" type="xsd:integer" name="IntervalSeconds" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="0" type="xsd:string" name="SyncTime" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" type="xsd:integer" name="TimeoutSeconds" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" type="xsd:string" name="EmlArchive" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" type="xsd:integer" name="EmlRetentionHours" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="EmlArchive" Selector="$Config/EmlArchive$" ParameterType="string" />
          <OverrideableParameter ID="EmlRetentionHours" Selector="$Config/EmlRetentionHours$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.Scheduler">
                <Scheduler>
                  <SimpleReccuringSchedule>
                    <Interval Unit="Seconds">$Config/IntervalSeconds$</Interval>
                    <SyncTime>$Config/SyncTime$</SyncTime>
                  </SimpleReccuringSchedule>
                  <ExcludeDates />
                </Scheduler>
              </DataSource>
              <ProbeAction ID="PA" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
                <ScriptName>Clean-EmlArchive.ps1</ScriptName>
                <ScriptBody><![CDATA[param($sourceId, $managedEntityId, $EmlArchive, $EmlRetentionHours)

$api  = New-Object -ComObject 'MOM.ScriptAPI'

$Global:Error.Clear()
$ErrorActionPreference = 'Continue'

$api.LogScriptEvent('SCOM.Addons.MailIn Clean-EmlArchive.ps1',5000,4,"SCOM Addons MailIn Clean-EmlArchive Rule Started - Source $($sourceId) `
	managEnt $($managedEntityId) EmlArc: $($EmlArchive) #RetentionHours:$($EmlRetentionHours)  ")


if (Test-Path -Path $EmlArchive) {
	$foo = "bar"
} else {
	$api.LogScriptEvent('SCOM.Addons.MailIn Clean-EmlArchive.ps1',5001,1,"SCOM Addons MailIn Rule - EmlArchive folder not found!`
		Looking for: $($EmlArchive). Exiting cleanup script..")
	exit
}

$noEmlArchiveFiles = 0
$emlArchiveFiles   = Get-ChildItem -Path $EmlArchive -Filter *.eml
$noEmlArchiveFiles = $emlArchiveFiles.Count

$arrDeletedEmlFiles = New-Object -TypeName System.Collections.ArrayList

if ($noEmlArchiveFiles -gt 1) {
	
	foreach ($emlFile in $emlArchiveFiles) {
		
		$timeSinceAlertInHours = (New-Timespan -Start $emlFile.LastWriteTime -End (Get-Date)).TotalHours -as [int]	
  
		If ($timeSinceAlertInHours -ge $EmlRetentionHours ) {
						
			$emlItem = ""
			$emlItem = $emlFile.Name + '_timeSinceAlertInHours_' + $timeSinceAlertInHours 
			$arrDeletedEmlFiles.Add($emlItem)    
			Remove-Item -Path $emlFile.FullName -Force

		} #end If ($timeSinceAlertInHours -ge $EmlRetentionHours ) {}

	} #end foreach ($emlFile in $emlArchiveFiles) {}
		
	$title    = "Removes archived eml files in folder $($EmlArchive) older than $($EmlRetentionHours) hours."
	$EmlCount = $noEmlArchiveFiles
	$EmlToDel = $arrDeletedEmlFiles.Count
	$EmlInfo  = $arrDeletedEmlFiles -join "; "

	$api.LogScriptEvent('SCOM.Addons.MailIn Clean-EmlArchive.ps1',5002,4,"SCOM Addons MailIn Clean-EmlArchive Rule `
		Title: $($title) `n EmlCount: $($EmlCount) `n EmlToDel: $($EmlToDel) `n EmlInfo: $($EmlInfo) ")

	if ($arrDeletedEmlFiles.Count -gt 0) {
		$bag = $api.CreatePropertybag()					
		$bag.AddValue("Title",$title)	
		$bag.AddValue("EmlCount",$EmlCount)
		$bag.AddValue("EmlToDel",$EmlToDel)	
		$bag.AddValue("EmlInfo",$EmlInfo)			
		$bag.AddValue("Result","BAD")		
		$bag
	} else {
		$foo = 'No bag. - Rule message with 0 does not make sense.'
	}
	
} #end if ($emlArchiveFiles.count -gt 1) {}

]]></ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>EmlArchive</Name>
                    <Value>$Config/EmlArchive$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>EmlRetentionHours</Name>
                    <Value>$Config/EmlRetentionHours$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PA">
                <Node ID="Scheduler" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="SCOM.Addons.MailIn.CloseAlerts.Rule.Datasource" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element minOccurs="1" type="xsd:integer" name="IntervalSeconds" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="0" type="xsd:string" name="SyncTime" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" type="xsd:integer" name="TimeoutSeconds" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" type="xsd:integer" name="AlertRetentionHours" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="AlertRetentionHours" Selector="$Config/AlertRetentionHours$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.Scheduler">
                <Scheduler>
                  <SimpleReccuringSchedule>
                    <Interval Unit="Seconds">$Config/IntervalSeconds$</Interval>
                    <SyncTime>$Config/SyncTime$</SyncTime>
                  </SimpleReccuringSchedule>
                  <ExcludeDates />
                </Scheduler>
              </DataSource>
              <ProbeAction ID="PA" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
                <ScriptName>Clean-GenericMailAlerts.ps1</ScriptName>
                <ScriptBody><![CDATA[param($sourceId, $managedEntityId, $AlertRetentionHours)

$api  = New-Object -ComObject 'MOM.ScriptAPI'

$Global:Error.Clear()
$ErrorActionPreference = 'Continue'

$api.LogScriptEvent('SCOM.Addons.MailIn Clean-GenericMailAlerts.ps1',6000,4,"SCOM Addons MailIn Clean-GenericMailAlerts Rule Started - Source $($sourceId) `
	managEnt $($managedEntityId) #RetentionHours:$($AlertRetentionHours)  ")


$allGenericMailAlerts    = 0
$closedGenericMailAlerts = 0
$alertRuleId   = Get-SCOMRule -Name 'SCOM.Addons.MailIn.Generic.Alert.Rule' | Select-Object -ExpandProperty Id
$allOpenAlerts = Get-ScomAlert -ResolutionState 0 | Where-Object {$_.RuleId -eq $alertRuleId}

$allGenericMailAlerts = $allOpenAlerts.count

if ($allGenericMailAlerts -gt 1) {
	
	foreach ($alert in $allOpenAlerts) {

		$timeSinceAlertInHours = (New-Timespan -Start $alert.TimeRaised -End (Get-Date)).TotalHours -as [int]	
  
		If ($timeSinceAlertInHours -ge $AlertRetentionHours ) { 
			$alertComment = "Autoclosed by rule SCOM.Addons.MailIn.CloseAlerts.Rule. AlertRentionInHours: $($AlertRetentionHours) - `
				Time since raise in hours: $($timeSinceAlertInHours)  "
			$alert | Set-SCOMAlert -ResolutionState 255 -Comment $alertComment
			$closedGenericMailAlerts = $closedGenericMailAlerts + 1
		} 

	}
}

$genericAlertInfo = "All Generic Mail Alerts: $($allGenericMailAlerts), Closed: $($closedGenericMailAlerts)"



$allCleanEmlArchiveAlerts    = 0
$closedCleanEmlArchiveAlerts = 0
$alertRuleId   = Get-SCOMRule -Name 'SCOM.Addons.MailIn.CleanEmlArchive.Rule' | Select-Object -ExpandProperty Id
$allOpenAlerts = Get-ScomAlert -ResolutionState 0 | Where-Object {$_.RuleId -eq $alertRuleId}

$allCleanEmlArchiveAlerts    = $allOpenAlerts.count
if ($allCleanEmlArchiveAlerts -gt 1) {
	foreach ($alert in $allOpenAlerts) {

		$timeSinceAlertInHours = (New-Timespan -Start $alert.TimeRaised -End (Get-Date)).TotalHours -as [int]	  

		If ($timeSinceAlertInHours -gt 1) { 
			$alertComment = "Autoclosed by rule SCOM.Addons.MailIn.CloseAlerts.Rule. Info messges closed if older than 1 hour. - `
				Time since raise in hours: $($timeSinceAlertInHours)  "
			$alert | Set-SCOMAlert -ResolutionState 255 -Comment $alertComment
			$closedCleanEmlArchiveAlerts = $closedCleanEmlArchiveAlerts + 1
		} 

	} 
}

$cleanEmlArchiveAlertInfo = "All Clean Eml Archive Alerts: $($allCleanEmlArchiveAlerts), Closed: $($closedCleanEmlArchiveAlerts)"



$allCloseAlertsAlerts    = 0
$closedCloseAlertsAlerts = 0
$alertRuleId   = Get-SCOMRule -Name 'SCOM.Addons.MailIn.CloseAlerts.Rule' | Select-Object -ExpandProperty Id
$allOpenAlerts = Get-ScomAlert -ResolutionState 0 | Where-Object {$_.RuleId -eq $alertRuleId}
$allCloseAlertsAlerts    = $allOpenAlerts.count

if ($allCloseAlertsAlerts -gt 1) {
	foreach ($alert in $allOpenAlerts) {

		$timeSinceAlertInHours = (New-Timespan -Start $alert.TimeRaised -End (Get-Date)).TotalHours -as [int]	  

		If ($timeSinceAlertInHours -gt 1) { 
			$alertComment = "Autoclosed by rule SCOM.Addons.MailIn.CloseAlerts.Rule. Info messges closed if older than 1 hour. - `
				Time since raise in hours: $($timeSinceAlertInHours)  "
			$alert | Set-SCOMAlert -ResolutionState 255 -Comment $alertComment
			$closedCloseAlertsAlerts = $closedCloseAlertsAlerts + 1
		} 

	} 
}

$closedAlertsAlertInfo = "All CloseAlerts Alerts: $($allCloseAlertsAlerts), Closed: $($closedCloseAlertsAlerts)"

$api.LogScriptEvent('SCOM.Addons.MailIn Clean-GenericMailAlerts.ps1',6001,4,"SCOM Addons MailIn Clean-GenericMailAlerts Rule `
	`nGenericAlertInfo: $($genericAlertInfo) `
	`nCleanEmlArchiveAlertInfo: $($cleanEmlArchiveAlertInfo) `
	`nClosedAlertsAlertInfo: $($closedAlertsAlertInfo) ")

$title = 'This rule (SCOM.Addons.MailIn.CloseAlerts.Rule) closes all GenericAlertMails older than: ' + $AlertRetentionHours + ' hours. All info messages are deleted after 1 hour.'

if ($allGenericMailAlerts -gt 1) {
	$bag = $api.CreatePropertybag()					
	$bag.AddValue("Title",$title)	
	$bag.AddValue("GenericAlertInfo",$genericAlertInfo)
	$bag.AddValue("CleanEmlArchiveAlertInfo",$cleanEmlArchiveAlertInfo)	
	$bag.AddValue("ClosedAlertsAlertInfo",$closedAlertsAlertInfo)			
	$bag.AddValue("Result","BAD")		
	$bag
} else {
	$foo = 'No bag. - Rule message with 0 does not make sense.'
}

]]></ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>AlertRetentionHours</Name>
                    <Value>$Config/AlertRetentionHours$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PA">
                <Node ID="Scheduler" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <ProbeActionModuleType ID="SCOM.Addons.MailIn.TestNode.Probe" Accessibility="Internal" Batching="false" PassThrough="false">
        <Configuration>
          <xsd:element name="XMLConfigFilePath" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SCOMAlertResetType" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="EmlDirectory" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="EmlArchive" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="NoOfLinesFromTop" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <ProbeAction ID="PSScript" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
                <ScriptName>Test-MailMonitorItems.ps1$</ScriptName>
                <ScriptBody><![CDATA[param($sourceId, $managedEntityId, $XMLConfigFilePath, $SCOMAlertResetType, $NoOfLinesFromTop, $EmlDirectory, $EmlArchive)

$api           = New-Object -ComObject 'MOM.ScriptAPI'
$discoveryData = $api.CreateDiscoveryData(0, $sourceId, $managedEntityId)

$Global:Error.Clear()
$ErrorActionPreference = 'Continue' 

$xmlConfigDir             = (Get-Item -Path $XMLConfigFilePath).DirectoryName
$globalSCOMAlertResetType = $SCOMAlertResetType


$api.LogScriptEvent('SCOM.Addons.MailIn Test-MailMonitorItems.ps1',4000,4,"SCOM Addons MailIn Test-MailMonitorItems Started - Source $($sourceId) `
	managEnt $($managedEntityId) XMLConfigFilePath-$($XMLConfigFilePath) and SCOMAlertResetType: $($SCOMAlertResetType) in EmlDirectory $($EmlDirectory)!!")

$XMLConfigFilePath = $XMLConfigFilePath -replace '[^\p{L}\p{Nd}/\\/:/\.]', ''

if ([System.IO.File]::Exists($XMLConfigFilePath)) {
  $foo = "bar"
} else {
  $api.LogScriptEvent('SCOM.Addons.MailIn Test-MailMonitorItem.ps1',4100,1,"XMLConfigFile not found in: $($XMLConfigFilePath). Script terminated. ")
  exit 
} 

if (Test-Path -Path $EmlDirectory) {
	$foo = "bar"
} else {
	$api.LogScriptEvent('SCOM.Addons.MailIn Test-MailMonitorItem.ps1.ps1',4030,1,"SCOM Addons MailIn Monitor - EmlFolder not found!  Looking for: $($EmlDirectory) Script ended.")
	exit 		
}


Function Convert-EmlFile {    

	param  (        
		$EmlFileName    
	)
		
	$adoStream = New-Object -ComObject 'ADODB.Stream'  
	$adoStream.Open()
	$adoStream.LoadFromFile($EmlFileName)    
	$cdoMessageObject = New-Object -ComObject 'CDO.Message'    
	$cdoMessageObject.DataSource.OpenObject($adoStream, '_Stream')
	
	return $cdoMessageObject

} #End Function Convert-EmlFile


$emlFiles = Get-ChildItem -Path $EmlDirectory -Filter *.eml

$api.LogScriptEvent('SCOM.Addons.MailIn Test-MailMonitorItem.ps1',4001,4,"SCOM Addons MailIn - `
	Found No: EML Messages: $($emlFiles.count)")

$allMails = New-object -TypeName System.Collections.Generic.List[psobject]

$regPatReceived = '(?i)(<?Received: from )[\w\.\- ()\[\]]+by'

#preparing objects
foreach ($eml in $emlFiles) {
 
  $bodyHTML = ''
  $bodyText = ''
	
  $emlContent   = Get-Content $eml.FullName -TotalCount 100

  $recvdNo      = [regex]::Matches($emlContent, $regPatReceived).count
  $recvdNoIndex = $recvdNo -1
  $receivedBy   = [regex]::Matches($emlContent, $regPatReceived)[$recvdNoIndex].Value
  $receivedBy   = [regex]::Replace($receivedBy,'(?i)Received: from |(?i) by','')
	
  $emlObj = Convert-EmlFile -EmlFileName $eml.FullName
  
  $bodyHTML = $emlObj.HTMLBody
  $bodyText = $emlObJ.TextBody

  if ($bodyHTML -eq $null -or $bodyHTML -eq '') { $bodyHTML = 'n.a.' } 
  if ($bodyText -eq $null -or $bodyText -eq '') { $bodyText = 'n.a.' }
  if ($bodyText -eq 'n.a.') { $bodyText = $bodyHTML }

  $bodyText = [Regex]::Replace($bodyText,'<[^>]*>',' ')
  $bodyText = [Regex]::Replace($bodyText,'\\s+',' ')
  $bodyText = $bodyText.Trim()
  $bodyText = $bodyText | Select-Object -First $NoOfLinesFromTop
  
  $mailProps = @{
	  mailFrom         = $emlObj.From          -replace '\s','_'
	  mailBody         = $bodyText 
	  mailSubject      = $emlObj.Subject       -replace '\s','_'
	  mailReceived     = $emlobj.ReceivedTime
	  mailSendTime     = $emlObj.SentOn
	  mailRecipient    = $emlObj.To
	  mailSourceServer = $receivedBy           -replace '\s','_'
	  mailFileName     = $eml.FullName    
  }

  $mailObject = New-Object -TypeName psobject -Property $mailProps 
  $allMails.Add($mailObject)  

} #end foreach ($eml in $emlFiles) {}


$allMailMonitorItems = New-object -TypeName System.Collections.Generic.List[psobject]

$xmlFile = [xml](Get-Content -Path $XMLConfigFilePath)

foreach($itm in $xmlFile.MailInMonitorList.MailMonitorItem) {
	  
  [string]$uniqueTitle                 = $itm.UniqueTitle		-replace '\s','_'
  [string]$description                 = $itm.Description		
  [string]$mailFrom                    = $itm.MailFrom			-replace '\s','_'
  [string]$mailSubject                 = $itm.MailSubject		-replace '\s','_'
  [string]$mailBody                    = $itm.MailBody			
  [string]$mailSourceServer            = $itm.MailSourceServer	-replace '\s','_'
  [string]$SCOMAlertResetType          = $itm.SCOMAlertResetType
  [int]$SCOMAlertResetTimeInSeconds    = $itm.SCOMAlertResetTimeInSeconds

	if ([String]::IsNullOrEmpty($uniqueTitle)) { 
		$api.LogScriptEvent('SCOM.Addons.MailIn Test-MailMonitorItem.ps1',4110,2,"MailItem: $description $mailFrom $mailSubject `
		$mailBody $mailSourceServer has no UniqueTitle. Skipped! . ")
		continue
	}
	if ([String]::IsNullOrEmpty($mailFrom)) { 
		$api.LogScriptEvent('SCOM.Addons.MailIn Test-MailMonitorItem.ps1',4110,2,"MailItem: $description $uniqueTitle $mailSubject `
		$mailBody $mailSourceServer has no MailFrom. Skipped! . ")
		continue
	}
	if ([String]::IsNullOrEmpty($SCOMAlertResetType)) { 
		$api.LogScriptEvent('SCOM.Addons.MailIn Test-MailMonitorItem.ps1',4110,4,"MailItem: $description $mailFrom $mailSubject `
		$mailBody $mailSourceServer $uniqueTitle has no SCOMAlertResetType, defaulting to TIMER based.. ")
		$SCOMAlertResetType = "Timer"
		$SCOMAlertResetTimeInSeconds = 3600
	}
	if ($SCOMAlertResetTimeInSeconds -lt 900) {
		$api.LogScriptEvent('SCOM.Addons.MailIn Test-MailMonitorItem.ps1',4110,2,"MailItem: $description $mailFrom $mailSubject `
		$mailBody $mailSourceServer $uniqueTitle has a SCOMAlertResetTimerInSeconds of. `n $($SCOMAlertResetTimeInSeconds) To avoid malfunction, it is set to 900 ( 15 minutes ). ")
		$SCOMAlertResetType = "Timer"
		$SCOMAlertResetTimeInSeconds = 3600
	}

	if ([String]::IsNullOrEmpty($description))      { $description = "" }  
	if ([String]::IsNullOrEmpty($mailSubject))      { $mailSubject = "" }
	if ([String]::IsNullOrEmpty($mailBody))         { $mailBody = "" }
	if ([String]::IsNullOrEmpty($mailSourceServer)) { $mailSourceServer = "" }

	$mItmProps = @{
		UniqueTitle                 = $uniqueTitle
		Description                 = $description
		MailFrom                    = $mailFrom
		MailSubject                 = $mailSubject
		MailBody                    = $mailBody
		MailSourceServer            = $mailSourceServer
		SCOMAlertResetType          = $SCOMAlertResetType
		SCOMAlertResetTimeInSeconds = $SCOMAlertResetTimeInSeconds
	}

	$mItmObj = New-Object -TypeName psobject -Property $mItmProps 

	$allMailMonitorItems.Add($mItmObj)

} #end foreach($itm in $xmlFile.MailInMonitorList.MailMonitorItem) {}

#$api.LogScriptEvent('SCOM.Addons.MailIn Test-MailMonitorItem.ps1',4111,2,"allMonitorItems Count: $($allMailMonitorItems.count)  ")

$filteredItems = ''
if ($globalSCOMAlertResetType -ieq 'Manual') {
	$filteredItems = $allMailMonitorItems | Where-Object { $_.SCOMAlertResetType -ieq 'Manual' }
} else {
	$filteredItems = $allMailMonitorItems | Where-Object { $_.SCOMAlertResetType -ieq 'Timer' }
}

#resetting monitors if time is up.
if ($globalSCOMAlertResetType -ieq 'Timer') {
	
	foreach ($fItem in $filteredItems) {
					
		$uniqueTitle                 = ''
		$description                 = ''
		$mailFrom                    = ''
		$mailSubject                 = ''
		$mailBody                    = ''
		$mailSourceServer            = ''
		$SCOMAlertResetType          = ''
		$SCOMAlertResetTimeInSeconds = ''
		
		[string]$uniqueTitle                 = $fItem.UniqueTitle
		[string]$description                 = $fItem.Description		
		[string]$mailFrom                    = $fItem.MailFrom	
		[string]$mailSubject                 = $fItem.MailSubject
		[string]$mailBody                    = $fItem.MailBody			
		[string]$mailSourceServer            = $fItem.MailSourceServer
		[string]$SCOMAlertResetType          = $fItem.SCOMAlertResetType
		[string]$SCOMAlertResetTimeInSeconds = $fItem.SCOMAlertResetTimeInSeconds

		$monFileName = "_AlertRaised_" + $uniqueTitle + "_" + $SCOMAlertResetTimeInSeconds + "_DoNotDelete_.txt" 	
		$monFilePath = Join-Path -Path $xmlConfigDir -ChildPath $monFileName
		
		if ([System.IO.File]::Exists($monFilePath)) {

			$monFilelastWriteTime    = Get-Item -Path $monFilePath | Select-Object -ExpandProperty LastWriteTime	
			$timeSinceAlertInSeconds = (New-Timespan -Start $monFilelastWriteTime -End (Get-Date)).TotalSeconds -as [int]	
			[int]$definedResetTime   = $fItem.SCOMAlertResetTimeInSeconds
				
			if ($timeSinceAlertInSeconds -le $definedResetTime) {
				$foo = " -- NO RESET because: timeSinceAlert $($timeSinceAlertInSeconds) - MaxAge: $($definedResetTime)"
			} else {				
				$bag = $api.CreatePropertybag()			
				$bag.AddValue("UniqueTitle",$($uniqueTitle))
				$bag.AddValue("MailSubject",$($mailSubject))			
				$bag.AddValue("MailFrom",$($mailFrom))		
				$bag.AddValue("MailBody", "Time to reset. - Seconds found in XML $($SCOMAlertResetTimeInSeconds)")	
				$bag.AddValue("MailSourceServer",$($mailSourceServer))	
				$bag.AddValue("mMetaInfo"," The monitor was timer resetted.`n Value has been taken from $($XMLConfigFilePath)`n`n If no value set, default one is 3600 seconds.")		
				$bag.AddValue("State","Success")		
				$bag	
			}
		} else {  
			$foo = 'No need to check. No Alert happened yet.'
		}

	} # end foreach ($fItem in $filteredItems) {}

} else  {  

	$foo = 'Manual reset Monitor!'

} # end if ($globalSCOMAlertResetType -ieq 'Timer') {}


foreach ($mail in $allMails) {
	
	foreach ($fItem in $filteredItems) {
	
		$bSendAlert     = $false

		$fiSubject      = ''
		$fiFrom         = ''
		$fiBody         = ''
		$fiSourceServer = ''
		$fiUniqueTitle  = ''
		$fiAlertTimer   = ''
		
		$bMailFrom         = $false
		$bMailSubject      = $false
		$bMailSourceServer = $false
		$bMailBody         = $false
				
		$fiSubject      = $fItem.MailSubject
		$fiFrom         = $fItem.mailFrom
		$fiBody         = $fItem.MailBody
		$fiSourceServer = $fItem.MailSourceServer  
		$fiUniqueTitle  = $fItem.UniqueTitle  
		$fiAlertTimer   = $fItem.SCOMAlertResetTimeInSeconds
	
	if ($fiFrom -ne '') {
		if ($($mail.mailFrom) -match "$($fiFrom)") { 		
			$bMailFrom = $true
		} else { 		
			$bMailFrom = $false 
		} 			  
	}
	if ($fiSubject -ne '') {
		if ($mail.mailSubject -match "$($fiSubject)") {        		
			$bMailSubject = $true
		} else { 		
			$bMailSubject = $false
		}
	}	
	if ($fiSourceServer -ne '')	{
		if ($mail.mailSourceServer -match "$($fiSourceServer)") { 		
			$bMailSourceServer = $true
		} else { 		
			$bMailSourceServer = $false
		}
	}
	if ($fiBody -ne '') {
		if ($mail.mailBody -match "$($fiBody)") { 			
			$bMailBody = $true
		} else { 			
			$bMailBody = $false
		}
	}		

	if ($fiFrom -ne '' -and $fiSubject -ne '' -and $fiSourceServer -ne '' -and $fiBody -ne '') {
		if ($bMailFrom -and $bMailSubject -and $bMailSourceServer -and $bMailBody) {		  
			$bSendAlert = $true		
		}
	} elseif ($fiFrom -ne '' -and $fiSubject -ne '' -and $fiSourceServer -ne '') {
		if ($bMailFrom -and $bMailSubject -and $bMailSourceServer)  {		  		
			$bSendAlert = $true		  
		}
	} elseif ($fiFrom -ne '' -and $fiSubject -ne '') {
		if ($bMailFrom -and $bMailSubject)  {		  		
			$bSendAlert = $true		  
		}      
	} elseif ($fiFrom -ne '' -and $fiSourceServer -ne '') {
		if ($bMailFrom -and $bMailSourceServer) {		  
			$bSendAlert = $true		  
		}      
	} elseif ($fiFrom -ne '' -and $fiBody -ne '') {
		if ($bMailFrom -and $bMailBody) {		  		  		  
			$bSendAlert      = $true		  
		}          
	} elseif ($fiSourceServer -ne '' -and $fiBody -ne '') {
		if ($bMailSourceServer -and $bMailBody) {				
			$bSendAlert = $true		
		}          
	} 

	if ($bSendAlert) {

		$mMetaInfo  = "`n Send at:`t$($mail.mailSendTime)`n Received at:`t$($mail.mailReceived)`n Addressed to:`t$($mail.mailRecipient) `
			`n Send by Host:`t$($mail.mailSourceServer)`n Subject:`t$($mail.mailSubject) "			

		$api.LogScriptEvent('SCOM.Addons.MailIn Test-MailMonitorItem.ps1',4003,4,"SCOM Addons MailIn Monitor BAG `
			mSubject: $($fiSubject) `t mail.MailSubject $($mail.mailSubject) `
			mFrom: $($fiFrom) `t mail.mailFrom $($mail.mailFrom) `
			mfSubject $($fiSubject) `t mail.mailSubject $($mail.mailSubject)
			mfBody $($fiBody) `t mail.mailBody: $($mail.mailBody)  `				 
			mfSourceServer $($fiSourceServer) `t mail.mailSourceServer $($mail.mailSourceServer) `n
			`n`n mMetaInfo: $($mMetaInfo) " )

			$bag = $api.CreatePropertybag()			
			$bag.AddValue("UniqueTitle",$fiUniqueTitle)
			$bag.AddValue("MailSubject",$mail.mailSubject)			
			$bag.AddValue("MailFrom",$mail.mailFrom)		
			$bag.AddValue("MailBody",$mail.mailBody)	
			$bag.AddValue("MailSourceServer",$fiSourceServer)	
			$bag.AddValue("mMetaInfo",$mMetaInfo)		
			$bag.AddValue("State","Failure")		
			$bag

			$monFileName = "_AlertRaised_" + $fiUniqueTitle + "_" + $fiAlertTimer + "_DoNotDelete_.txt" 
			$null = New-Item -Path $xmlConfigDir -ItemType File -Name $monFileName -Value $mMetaInfo -Force

			$bSendAlert = $true		
			Move-Item -Path $mail.mailFileName -Destination $emlArchive -Force			

		} else {

		  $foo = "no bag"

		} # end if ($bSendAlert -eq $true)

	} # end foreach ($fItem in $filteredItems) {}

} # end foreach ($mail in $allMails) {}

]]></ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>XMLConfigFilePath</Name>
                    <Value>$Config/XMLConfigFilePath$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>SCOMAlertResetType</Name>
                    <Value>$Config/SCOMAlertResetType$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>EmlDirectory</Name>
                    <Value>$Config/EmlDirectory$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>EmlArchive</Name>
                    <Value>$Config/EmlArchive$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>NoOfLinesFromTop</Name>
                    <Value>$Config/NoOfLinesFromTop$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>300</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PSScript" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
        <InputType>System!System.BaseData</InputType>
      </ProbeActionModuleType>
    </ModuleTypes>
    <MonitorTypes>
      <UnitMonitorType ID="SCOM.Addons.MailIn.TestNode.MonitorType" Accessibility="Internal">
        <MonitorTypeStates>
          <MonitorTypeState ID="Success" NoDetection="false" />
          <MonitorTypeState ID="Failure" NoDetection="false" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="UniqueTitle" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="XMLConfigFilePath" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SCOMAlertResetType" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="EmlDirectory" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="EmlArchive" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="NoOfLinesFromTop" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="XMLConfigFilePath" Selector="$Config/XMLConfigFilePath$" ParameterType="string" />
          <OverrideableParameter ID="SCOMAlertResetType" Selector="$Config/SCOMAlertResetType$" ParameterType="string" />
          <OverrideableParameter ID="EmlDirectory" Selector="$Config/EmlDirectory$" ParameterType="string" />
          <OverrideableParameter ID="EmlArchive" Selector="$Config/EmlArchive$" ParameterType="string" />
          <OverrideableParameter ID="NoOfLinesFromTop" Selector="$Config/NoOfLinesFromTop$" ParameterType="int" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DataSource" TypeID="SCOM.Addons.MailIn.TestNode.PropertyBag.Filtered">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <UniqueTitle>$Config/UniqueTitle$</UniqueTitle>
              <XMLConfigFilePath>$Config/XMLConfigFilePath$</XMLConfigFilePath>
              <SCOMAlertResetType>$Config/SCOMAlertResetType$</SCOMAlertResetType>
              <EmlDirectory>$Config/EmlDirectory$</EmlDirectory>
              <EmlArchive>$Config/EmlArchive$</EmlArchive>
              <NoOfLinesFromTop>$Config/NoOfLinesFromTop$</NoOfLinesFromTop>
            </DataSource>
            <ProbeAction ID="PassThru" TypeID="System!System.PassThroughProbe" />
            <ProbeAction ID="Probe" TypeID="SCOM.Addons.MailIn.TestNode.Probe">
              <XMLConfigFilePath>$Config/XMLConfigFilePath$</XMLConfigFilePath>
              <SCOMAlertResetType>$Config/SCOMAlertResetType$</SCOMAlertResetType>
              <EmlDirectory>$Config/EmlDirectory$</EmlDirectory>
              <EmlArchive>$Config/EmlArchive$</EmlArchive>
              <NoOfLinesFromTop>$Config/NoOfLinesFromTop$</NoOfLinesFromTop>
            </ProbeAction>
            <ConditionDetection ID="FilterSuccess" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='State']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Success</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="FilterFailure" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='State']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Failure</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="Success">
              <Node ID="FilterSuccess">
                <Node ID="DataSource" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="Failure">
              <Node ID="FilterFailure">
                <Node ID="DataSource" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
    </MonitorTypes>
  </TypeDefinitions>
  <Categories>
    <Category ID="SCOM.Addons.MailIn.MailMonitorItem.ManualReset.Category" Target="SCOM.Addons.MailIn.MailMonitorItem.ManualReset.Icon" Value="System!System.Internal.ManagementPack.Images.DiagramIcon" />
    <Category ID="SCOM.Addons.MailIn.MailMonitorItem.TimerReset.Category" Target="SCOM.Addons.MailIn.MailMonitorItem.TimerReset.Icon" Value="System!System.Internal.ManagementPack.Images.DiagramIcon" />
  </Categories>
  <Monitoring>
    <Discoveries>
      <Discovery ID="SCOM.Addons.MailIn.Discovery.SCOM.Addons.MailIn.MonitoringServer" Target="Windows!Microsoft.Windows.Computer" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="SCOM.Addons.MailIn.MonitoringServer" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.FilteredRegistryDiscoveryProvider">
          <ComputerName>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName>
          <RegistryAttributeDefinitions>
            <RegistryAttributeDefinition>
              <AttributeName>KeyExists</AttributeName>
              <Path>SOFTWARE\ABCIT\SCOMAddonsMailIn</Path>
              <PathType>0</PathType>
              <AttributeType>0</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>XMLConfigFilePath</AttributeName>
              <Path>SOFTWARE\ABCIT\SCOMAddonsMailIn\XMLConfigFilePath</Path>
              <PathType>1</PathType>
              <AttributeType>1</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>EmlDirectory</AttributeName>
              <Path>SOFTWARE\ABCIT\SCOMAddonsMailIn\EmlDirectory</Path>
              <PathType>1</PathType>
              <AttributeType>1</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>EmlArchive</AttributeName>
              <Path>SOFTWARE\ABCIT\SCOMAddonsMailIn\EmlArchive</Path>
              <PathType>1</PathType>
              <AttributeType>1</AttributeType>
            </RegistryAttributeDefinition>
          </RegistryAttributeDefinitions>
          <Frequency>86400</Frequency>
          <ClassId>$MPElement[Name="SCOM.Addons.MailIn.MonitoringServer"]$</ClassId>
          <InstanceSettings>
            <Settings>
              <Setting>
                <Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name>
                <Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name>
                <Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="SCOM.Addons.MailIn.MonitoringServer"]/SmtpServerName$</Name>
                <Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="SCOM.Addons.MailIn.MonitoringServer"]/XMLConfigFilePath$</Name>
                <Value>$Data/Values/XMLConfigFilePath$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="SCOM.Addons.MailIn.MonitoringServer"]/EmlDirectory$</Name>
                <Value>$Data/Values/EmlDirectory$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="SCOM.Addons.MailIn.MonitoringServer"]/EmlArchive$</Name>
                <Value>$Data/Values/EmlArchive$</Value>
              </Setting>
            </Settings>
          </InstanceSettings>
          <Expression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery>Values/KeyExists</XPathQuery>
              </ValueExpression>
              <Operator>Equal</Operator>
              <ValueExpression>
                <Value>true</Value>
              </ValueExpression>
            </SimpleExpression>
          </Expression>
        </DataSource>
      </Discovery>
      <Discovery ID="SCOM.Addons.MailIn.Discovery.SCOM.Addons.MailIn.MailMonitorItems" Target="SCOM.Addons.MailIn.MonitoringServer" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="SCOM.Addons.MailIn.MailMonitorItem.ManualReset" />
          <DiscoveryClass TypeID="SCOM.Addons.MailIn.MailMonitorItem.TimerReset" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedPowerShell.DiscoveryProvider">
          <IntervalSeconds>900</IntervalSeconds>
          <SyncTime />
          <ScriptName>Get-MailMonitorItems.ps1</ScriptName>
          <ScriptBody><![CDATA[param($sourceId, $managedEntityId, $XMLConfigFilePath)

$api           = New-Object -ComObject 'MOM.ScriptAPI'
$discoveryData = $api.CreateDiscoveryData(0, $sourceId, $managedEntityId)

$Global:Error.Clear()
$ErrorActionPreference = 'Continue' 

$api.LogScriptEvent('SCOM.Addons.MailIn GetMailMonitorItems.ps1',3100,4,"SCOM Addons MailIn Get-MailMonitorItem Started - Source $($sourceId) `
	managEnt $($managedEntityId) XMLConfigFilePath-$($XMLConfigFilePath)-!!")

$XMLConfigFilePath = $XMLConfigFilePath -replace '[^\p{L}\p{Nd}/\\/:/\.]', ''

if ([System.IO.File]::Exists($XMLConfigFilePath)) {
  $foo = "bar"
} else {
  $api.LogScriptEvent('SCOM.Addons.MailIn GetMailMonitorItems.ps1',3101,1,"XMLConfigFile not found in: $($XMLConfigFilePath). Script terminated. ")
  exit 
}

$allMailMonitorItems = New-object -TypeName System.Collections.Generic.List[psobject]

$xmlFile = [xml](Get-Content -Path $XMLConfigFilePath)

foreach($itm in $xmlFile.MailInMonitorList.MailMonitorItem) {
	
  [string]$uniqueTitle                  = $itm.UniqueTitle		-replace '\s','_'
  [string]$description                  = $itm.Description		
  [string]$mailFrom                     = $itm.MailFrom			-replace '\s','_'
  [string]$mailSubject                  = $itm.MailSubject		-replace '\s','_'
  [string]$mailBody                     = $itm.MailBody			
  [string]$mailSourceServer             = $itm.MailSourceServer	-replace '\s','_'
  [string]$SCOMAlertResetType           = $itm.SCOMAlertResetType
  [string]$SCOMAlertResetTimeInSeconds  = $itm.SCOMAlertResetTimeInSeconds

  if ([String]::IsNullOrEmpty($uniqueTitle)) { 
	$api.LogScriptEvent('SCOM.Addons.MailIn GetMailMonitorItems.ps1',3110,2,"MailItem: $description $mailFrom $mailSubject `
	$mailBody $mailSourceServer has no UniqueTitle. Skipped! . ")
	continue
	}

  if ([String]::IsNullOrEmpty($mailFrom)) { 
	$api.LogScriptEvent('SCOM.Addons.MailIn GetMailMonitorItems.ps1',3110,2,"MailItem: $description $uniqueTitle $mailSubject `
	$mailBody $mailSourceServer has no MailFrom. Skipped! . ")
	continue
  }
  if ([String]::IsNullOrEmpty($SCOMAlertResetType)) { 
	$api.LogScriptEvent('SCOM.Addons.MailIn GetMailMonitorItems.ps1',3110,4,"MailItem: $description $mailFrom $mailSubject `
	$mailBody $mailSourceServer $uniqueTitle has SCOMAlertResetType, defaulting to TIMER based.. ")
	$SCOMAlertResetType = "Timer"
  }
  if ([String]::IsNullOrEmpty($SCOMAlertResetTimeInSeconds) -and ($SCOMAlertResetType -ieq 'Timer') ) { 
	$api.LogScriptEvent('SCOM.Addons.MailIn GetMailMonitorItems.ps1',3110,3,"MailItem: $description $mailFrom $mailSubject `
	$mailBody $mailSourceServer $uniqueTitle has SCOMAlertResetType Time and no value, defaulting to 3600 seconds . ")
	$SCOMAlertResetTimeInSeconds = 3600
  }
  if ($SCOMAlertResetType -ieq 'Manual') { 
	$api.LogScriptEvent('SCOM.Addons.MailIn GetMailMonitorItems.ps1',3110,2,"MailItem: $description $mailFrom $mailSubject `
	$mailBody $mailSourceServer $uniqueTitle has SCOMAlertResetType to Manal and value in SCOMAlertimerValue $($SCOMAlertResetTimeInSeconds), set to 0 ")
	[string]$SCOMAlertResetTimeInSeconds = "0"
  }
  if ([String]::IsNullOrEmpty($description))      { $description = "" }  
  if ([String]::IsNullOrEmpty($mailSubject))      { $mailSubject = "" }
  if ([String]::IsNullOrEmpty($mailBody))         { $mailBody = "" }
  if ([String]::IsNullOrEmpty($mailSourceServer)) { $mailSourceServer = "" }

  $mItmProps = @{
	UniqueTitle                  = $uniqueTitle
	Description                  = $description
	MailFrom                     = $mailFrom
	MailSubject                  = $mailSubject
	MailBody                     = $mailBody
	MailSourceServer             = $mailSourceServer
	SCOMAlertResetType           = $SCOMAlertResetType
	SCOMAlertResetTimeInSeconds  = $SCOMAlertResetTimeInSeconds
  }

  $mItmObj = New-Object -TypeName psobject -Property $mItmProps 

  $allMailMonitorItems.Add($mItmObj)

} #end foreach($itm in $xmlFile.MailInMonitorList.MailMonitorItem) {}

$api.LogScriptEvent('SCOM.Addons.MailIn GetMailMonitorItems.ps1',3111,2,"allMonitorItems Count: $($allMailMonitorItems.count)  ")

foreach ($mItm in $allMailMonitorItems) {
		
	if ($mItm.SCOMAlertResetType -ieq 'Manual') {
		$displayName = 'MailMonitor-' + $mItm.UniqueTitle + '-ManualReset'
		$instance = $discoveryData.CreateClassInstance("$MPElement[Name='SCOM.Addons.MailIn.MailMonitorItem.ManualReset']$")
	} else {
		$displayName = 'MailMonitor-' + $mItm.UniqueTitle + '-TimerReset'
		$instance = $discoveryData.CreateClassInstance("$MPElement[Name='SCOM.Addons.MailIn.MailMonitorItem.TimerReset']$")
	}

	$api.LogScriptEvent('SCOM.Addons.MailIn GetMailMonitorItems.ps1',3121,4,"Adding $($displayName) ")
	
	$instance.AddProperty("$MPElement[Name='SCOM.Addons.MailIn.MailMonitorItem']/UniqueTitle$",$mItm.UniqueTitle)
	$instance.AddProperty("$MPElement[Name='SCOM.Addons.MailIn.MailMonitorItem']/Description$",$mItm.Description)
	$instance.AddProperty("$MPElement[Name='SCOM.Addons.MailIn.MailMonitorItem']/MailFrom$",$mItm.MailFrom)
	$instance.AddProperty("$MPElement[Name='SCOM.Addons.MailIn.MailMonitorItem']/MailSubject$",$mItm.MailSubject)
	$instance.AddProperty("$MPElement[Name='SCOM.Addons.MailIn.MailMonitorItem']/MailBody$",$mItm.MailBody)
	$instance.AddProperty("$MPElement[Name='SCOM.Addons.MailIn.MailMonitorItem']/MailSourceServer$",$mItm.MailSourceServer)
	$instance.AddProperty("$MPElement[Name='SCOM.Addons.MailIn.MailMonitorItem']/SCOMAlertResetType$",$mItm.SCOMAlertResetType)
	$instance.AddProperty("$MPElement[Name='SCOM.Addons.MailIn.MailMonitorItem']/SCOMAlertResetTimeInSeconds$",$mItm.SCOMAlertResetTimeInSeconds)
	$instance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $displayName)
	$discoveryData.AddInstance($instance)		
	
}

$discoveryData]]></ScriptBody>
          <Parameters>
            <Parameter>
              <Name>sourceId</Name>
              <Value>$MPElement$</Value>
            </Parameter>
            <Parameter>
              <Name>managedEntityId</Name>
              <Value>$Target/Id$</Value>
            </Parameter>
            <Parameter>
              <Name>XMLConfigFilePath</Name>
              <Value>$Target/Property[Type="SCOM.Addons.MailIn.MonitoringServer"]/XMLConfigFilePath$</Value>
            </Parameter>
          </Parameters>
          <TimeoutSeconds>120</TimeoutSeconds>
        </DataSource>
      </Discovery>
    </Discoveries>
    <Rules>
      <Rule ID="SCOM.Addons.MailIn.Generic.Alert.Rule" Enabled="true" Target="SCOM.Addons.MailIn.MonitoringServer" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>Alert</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="SCOM.Addons.MailIn.Alert.Rule.Datasource">
            <IntervalSeconds>600</IntervalSeconds>
            <SyncTime></SyncTime>
            <TimeoutSeconds>120</TimeoutSeconds>
            <EmlDirectory>C:\inetpub\mailroot\Drop</EmlDirectory>
            <EmlArchive>C:\Temp\MailArchive</EmlArchive>
            <NoOfLinesFromTop>100</NoOfLinesFromTop>
            <XMLConfigFilePath>C:\Temp\SCOM.Addons.MailIn.MonitorItemList.xml</XMLConfigFilePath>
          </DataSource>
        </DataSources>
        <ConditionDetection ID="CD" TypeID="System!System.ExpressionFilter">
          <Expression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="String">Property[@Name='Result']</XPathQuery>
              </ValueExpression>
              <Operator>Equal</Operator>
              <ValueExpression>
                <Value Type="String">BAD</Value>
              </ValueExpression>
            </SimpleExpression>
          </Expression>
        </ConditionDetection>
        <WriteActions>
          <WriteAction ID="WA" TypeID="Health!System.Health.GenerateAlert">
            <Priority>1</Priority>
            <Severity>1</Severity>
            <AlertMessageId>$MPElement[Name="SCOM.Addons.MailIn.Generic.Alert.Rule.AlertMessage"]$</AlertMessageId>
            <AlertParameters>
              <AlertParameter1>$Data/Property[@Name='mSubject']$</AlertParameter1>
              <AlertParameter2>$Data/Property[@Name='mFrom']$</AlertParameter2>
              <AlertParameter3>$Data/Property[@Name='mBody']$</AlertParameter3>
              <AlertParameter4>$Data/Property[@Name='mMetaInfo']$</AlertParameter4>
            </AlertParameters>
            <Suppression />
          </WriteAction>
        </WriteActions>
      </Rule>
      <Rule ID="SCOM.Addons.MailIn.CleanEmlArchive.Rule" Enabled="true" Target="SCOM.Addons.MailIn.MonitoringServer" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>Custom</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="SCOM.Addons.MailIn.CleanEmlArchive.Rule.Datasource">
            <IntervalSeconds>600</IntervalSeconds>
            <SyncTime></SyncTime>
            <TimeoutSeconds>120</TimeoutSeconds>
            <EmlArchive>C:\Temp\MailArchive</EmlArchive>
            <EmlRetentionHours>720</EmlRetentionHours>
          </DataSource>
        </DataSources>
        <ConditionDetection ID="CD" TypeID="System!System.ExpressionFilter">
          <Expression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="String">Property[@Name='Result']</XPathQuery>
              </ValueExpression>
              <Operator>Equal</Operator>
              <ValueExpression>
                <Value Type="String">BAD</Value>
              </ValueExpression>
            </SimpleExpression>
          </Expression>
        </ConditionDetection>
        <WriteActions>
          <WriteAction ID="WA" TypeID="Health!System.Health.GenerateAlert">
            <Priority>1</Priority>
            <Severity>0</Severity>
            <AlertMessageId>$MPElement[Name="SCOM.Addons.MailIn.CleanEmlArchive.Rule.AlertMessage"]$</AlertMessageId>
            <AlertParameters>
              <AlertParameter1>$Data/Property[@Name='Title']$</AlertParameter1>
              <AlertParameter2>$Data/Property[@Name='EmlCount']$</AlertParameter2>
              <AlertParameter3>$Data/Property[@Name='EmlToDel']$</AlertParameter3>
              <AlertParameter4>$Data/Property[@Name='EmlInfo']$</AlertParameter4>
            </AlertParameters>
            <Suppression />
          </WriteAction>
        </WriteActions>
      </Rule>
      <Rule ID="SCOM.Addons.MailIn.CloseAlerts.Rule" Enabled="true" Target="SCOM.Addons.MailIn.MonitoringServer" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>Custom</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="SCOM.Addons.MailIn.CloseAlerts.Rule.Datasource">
            <IntervalSeconds>7200</IntervalSeconds>
            <SyncTime></SyncTime>
            <TimeoutSeconds>120</TimeoutSeconds>
            <AlertRetentionHours>24</AlertRetentionHours>
          </DataSource>
        </DataSources>
        <ConditionDetection ID="CD" TypeID="System!System.ExpressionFilter">
          <Expression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="String">Property[@Name='Result']</XPathQuery>
              </ValueExpression>
              <Operator>Equal</Operator>
              <ValueExpression>
                <Value Type="String">BAD</Value>
              </ValueExpression>
            </SimpleExpression>
          </Expression>
        </ConditionDetection>
        <WriteActions>
          <WriteAction ID="WA" TypeID="Health!System.Health.GenerateAlert">
            <Priority>1</Priority>
            <Severity>0</Severity>
            <AlertMessageId>$MPElement[Name="SCOM.Addons.MailIn.CloseAlerts.Rule.AlertMessage"]$</AlertMessageId>
            <AlertParameters>
              <AlertParameter1>$Data/Property[@Name='Title']$</AlertParameter1>
              <AlertParameter2>$Data/Property[@Name='GenericAlertInfo']$</AlertParameter2>
              <AlertParameter3>$Data/Property[@Name='CleanEmlArchiveAlertInfo']$</AlertParameter3>
              <AlertParameter4>$Data/Property[@Name='ClosedAlertsAlertInfo']$</AlertParameter4>
            </AlertParameters>
            <Suppression />
          </WriteAction>
        </WriteActions>
      </Rule>
    </Rules>
    <Monitors>
      <UnitMonitor ID="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MonitoringServer.SmtpSerivce" Accessibility="Internal" Enabled="true" Target="SCOM.Addons.MailIn.MonitoringServer" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.CheckNTServiceStateMonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MonitoringServer.SmtpSerivce.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success" />
          <OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName>
          <ServiceName>SMTPSVC</ServiceName>
          <CheckStartupType />
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MailItem.TimerReset" Accessibility="Internal" Enabled="true" Target="SCOM.Addons.MailIn.MailMonitorItem.TimerReset" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="SCOM.Addons.MailIn.TestNode.MonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MailItem.TimerReset.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name='UniqueTitle']$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name='MailSubject']$</AlertParameter2>
            <AlertParameter3>$Data/Context/Property[@Name='MailFrom']$</AlertParameter3>
            <AlertParameter4>$Data/Context/Property[@Name='MailBody']$</AlertParameter4>
            <AlertParameter5>$Data/Context/Property[@Name='MailSourceServer']$</AlertParameter5>
            <AlertParameter6>$Data/Context/Property[@Name='mMetaInfo']$</AlertParameter6>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Success" MonitorTypeStateID="Success" HealthState="Success" />
          <OperationalState ID="Failure" MonitorTypeStateID="Failure" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>300</IntervalSeconds>
          <SyncTime />
          <UniqueTitle>$Target/Property[Type="SCOM.Addons.MailIn.MailMonitorItem"]/UniqueTitle$</UniqueTitle>
          <XMLConfigFilePath>C:\Temp\SCOM.Addons.MailIn.MonitorItemList.xml</XMLConfigFilePath>
          <SCOMAlertResetType>Timer</SCOMAlertResetType>
          <EmlDirectory>C:\inetpub\mailroot\Drop</EmlDirectory>
          <EmlArchive>C:\Temp\MailArchive</EmlArchive>
          <NoOfLinesFromTop>100</NoOfLinesFromTop>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MailItem.ManualReset" Accessibility="Internal" Enabled="true" Target="SCOM.Addons.MailIn.MailMonitorItem.ManualReset" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="SCOM.Addons.MailIn.TestNode.MonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MailItem.ManualReset.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name='UniqueTitle']$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name='MailSubject']$</AlertParameter2>
            <AlertParameter3>$Data/Context/Property[@Name='MailFrom']$</AlertParameter3>
            <AlertParameter4>$Data/Context/Property[@Name='MailBody']$</AlertParameter4>
            <AlertParameter5>$Data/Context/Property[@Name='MailSourceServer']$</AlertParameter5>
            <AlertParameter6>$Data/Context/Property[@Name='mMetaInfo']$</AlertParameter6>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Success" MonitorTypeStateID="Success" HealthState="Success" />
          <OperationalState ID="Failure" MonitorTypeStateID="Failure" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>300</IntervalSeconds>
          <SyncTime />
          <UniqueTitle>$Target/Property[Type="SCOM.Addons.MailIn.MailMonitorItem"]/UniqueTitle$</UniqueTitle>
          <XMLConfigFilePath>C:\Temp\SCOM.Addons.MailIn.MonitorItemList.xml</XMLConfigFilePath>
          <SCOMAlertResetType>Manual</SCOMAlertResetType>
          <EmlDirectory>C:\inetpub\mailroot\Drop</EmlDirectory>
          <EmlArchive>C:\Temp\MailArchive</EmlArchive>
          <NoOfLinesFromTop>100</NoOfLinesFromTop>
        </Configuration>
      </UnitMonitor>
    </Monitors>
  </Monitoring>
  <Presentation>
    <Views>
      <View ID="SCOM.Addons.MailIn.State.SCOM.Addons.MailIn.MailMonitorItems.TimerReset" Accessibility="Internal" Target="SCOM.Addons.MailIn.MailMonitorItem.TimerReset" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <InMaintenanceMode>false</InMaintenanceMode>
        </Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="100" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>State</Name>
            <Id>SCOM.Addons.MailIn.MailMonitorItem.TimerReset</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Maintenance Mode</Name>
            <Id>InMaintenanceMode</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>Path</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Display Name</Name>
            <Id>System.Entity/DisplayName</Id>
          </ColumnInfo>
          <ColumnInfo Index="5" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Unique Title</Name>
            <Id>SCOM.Addons.MailIn.MailMonitorItem/UniqueTitle</Id>
          </ColumnInfo>
          <ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Description</Name>
            <Id>SCOM.Addons.MailIn.MailMonitorItem/Description</Id>
          </ColumnInfo>
          <ColumnInfo Index="7" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Mail From</Name>
            <Id>SCOM.Addons.MailIn.MailMonitorItem/MailFrom</Id>
          </ColumnInfo>
          <ColumnInfo Index="8" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Mail Subject</Name>
            <Id>SCOM.Addons.MailIn.MailMonitorItem/MailSubject</Id>
          </ColumnInfo>
          <ColumnInfo Index="9" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Mail Body</Name>
            <Id>SCOM.Addons.MailIn.MailMonitorItem/MailBody</Id>
          </ColumnInfo>
          <ColumnInfo Index="10" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Mail Source Server</Name>
            <Id>SCOM.Addons.MailIn.MailMonitorItem/MailSourceServer</Id>
          </ColumnInfo>
          <ColumnInfo Index="11" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>SCOM Alert Reset Type</Name>
            <Id>SCOM.Addons.MailIn.MailMonitorItem/SCOMAlertResetType</Id>
          </ColumnInfo>
          <ColumnInfo Index="12" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>SCOM Alert Monitor Reset (in Seconds)</Name>
            <Id>SCOM.Addons.MailIn.MailMonitorItem/SCOMAlertResetTimeInSeconds</Id>
          </ColumnInfo>
        </Presentation>
        <Target />
      </View>
      <View ID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.TimerReset.Closed" Accessibility="Internal" Target="SCOM.Addons.MailIn.MailMonitorItem.TimerReset" TypeID="SC!Microsoft.SystemCenter.AlertViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <SeverityList>
            <Severity>Warning</Severity>
            <Severity>Error</Severity>
          </SeverityList>
          <ResolutionState>
            <StateRange Operator="Equals">255</StateRange>
          </ResolutionState>
        </Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="22" Grouped="true" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Severity</Name>
            <Id>Severity</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="54" Grouped="false" Sorted="false" IsSortable="false" Visible="true" SortOrder="Ascending">
            <Name>Icon</Name>
            <Id>Icon</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>MonitoringObjectPath</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Source</Name>
            <Id>MonitoringObjectDisplayName</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" SortIndex="-1" Width="22" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Maintenance Mode</Name>
            <Id>MonitoringObjectInMaintenanceMode</Id>
          </ColumnInfo>
          <ColumnInfo Index="5" SortIndex="-1" Width="250" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Resolution State</Name>
            <Id>ResolutionState</Id>
          </ColumnInfo>
          <ColumnInfo Index="7" SortIndex="1" Width="150" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>Created</Name>
            <Id>TimeRaised</Id>
          </ColumnInfo>
          <ColumnInfo Index="8" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Age</Name>
            <Id>Age</Id>
          </ColumnInfo>
          <ColumnInfo Index="9" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Type</Name>
            <Id>Category</Id>
          </ColumnInfo>
          <ColumnInfo Index="10" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Owner</Name>
            <Id>Owner</Id>
          </ColumnInfo>
          <ColumnInfo Index="11" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Priority</Name>
            <Id>Priority</Id>
          </ColumnInfo>
          <ColumnInfo Index="12" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Latency</Name>
            <Id>Latency</Id>
          </ColumnInfo>
          <ColumnInfo Index="13" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Description</Name>
            <Id>Description</Id>
          </ColumnInfo>
          <ColumnInfo Index="14" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Connector</Name>
            <Id>ConnectorId</Id>
          </ColumnInfo>
          <ColumnInfo Index="15" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Forwarding Status</Name>
            <Id>ConnectorStatus</Id>
          </ColumnInfo>
          <ColumnInfo Index="16" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Class</Name>
            <Id>Class</Id>
          </ColumnInfo>
          <ColumnInfo Index="17" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Time in State</Name>
            <Id>TimeInState</Id>
          </ColumnInfo>
          <ColumnInfo Index="18" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 1</Name>
            <Id>CustomField1</Id>
          </ColumnInfo>
          <ColumnInfo Index="19" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 2</Name>
            <Id>CustomField2</Id>
          </ColumnInfo>
          <ColumnInfo Index="20" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 3</Name>
            <Id>CustomField3</Id>
          </ColumnInfo>
          <ColumnInfo Index="21" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 4</Name>
            <Id>CustomField4</Id>
          </ColumnInfo>
          <ColumnInfo Index="22" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 5</Name>
            <Id>CustomField5</Id>
          </ColumnInfo>
          <ColumnInfo Index="23" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 6</Name>
            <Id>CustomField6</Id>
          </ColumnInfo>
          <ColumnInfo Index="24" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 7</Name>
            <Id>CustomField7</Id>
          </ColumnInfo>
          <ColumnInfo Index="25" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 8</Name>
            <Id>CustomField8</Id>
          </ColumnInfo>
          <ColumnInfo Index="26" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 9</Name>
            <Id>CustomField9</Id>
          </ColumnInfo>
          <ColumnInfo Index="27" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 10</Name>
            <Id>CustomField10</Id>
          </ColumnInfo>
          <ColumnInfo Index="28" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Resolved By</Name>
            <Id>ResolvedBy</Id>
          </ColumnInfo>
          <ColumnInfo Index="29" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Time Resolved</Name>
            <Id>TimeResolved</Id>
          </ColumnInfo>
          <ColumnInfo Index="30" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Last State Change</Name>
            <Id>TimeResolutionStateLastModified</Id>
          </ColumnInfo>
          <ColumnInfo Index="31" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Last Modified</Name>
            <Id>LastModified</Id>
          </ColumnInfo>
          <ColumnInfo Index="32" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Last Modified By</Name>
            <Id>LastModifiedBy</Id>
          </ColumnInfo>
          <ColumnInfo Index="33" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Management Group</Name>
            <Id>ManagementGroup</Id>
          </ColumnInfo>
          <ColumnInfo Index="34" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Site</Name>
            <Id>SiteName</Id>
          </ColumnInfo>
          <ColumnInfo Index="35" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Repeat Count</Name>
            <Id>RepeatCount</Id>
          </ColumnInfo>
          <ColumnInfo Index="36" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Ticket ID</Name>
            <Id>TicketId</Id>
          </ColumnInfo>
          <ColumnInfo Index="37" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>TFS Work Item ID</Name>
            <Id>TfsWorkItemId</Id>
          </ColumnInfo>
          <ColumnInfo Index="38" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>TFS Work Item Owner</Name>
            <Id>TfsWorkItemOwner</Id>
          </ColumnInfo>
        </Presentation>
      </View>
      <View ID="SCOM.Addons.MailIn.State.SCOM.Addons.MailIn.MonitoringServer" Accessibility="Internal" Target="SCOM.Addons.MailIn.MonitoringServer" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
      </View>
      <View ID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.Rule.Closed" Accessibility="Internal" Target="SCOM.Addons.MailIn.MonitoringServer" TypeID="SC!Microsoft.SystemCenter.AlertViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <SeverityList>
            <Severity>Warning</Severity>
            <Severity>Error</Severity>
          </SeverityList>
          <ResolutionState>
            <StateRange Operator="Equals">255</StateRange>
          </ResolutionState>
        </Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="22" Grouped="true" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Severity</Name>
            <Id>Severity</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="54" Grouped="false" Sorted="false" IsSortable="false" Visible="true" SortOrder="Ascending">
            <Name>Icon</Name>
            <Id>Icon</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>MonitoringObjectPath</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Source</Name>
            <Id>MonitoringObjectDisplayName</Id>
          </ColumnInfo>
          <ColumnInfo Index="5" SortIndex="-1" Width="250" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Resolution State</Name>
            <Id>ResolutionState</Id>
          </ColumnInfo>
          <ColumnInfo Index="7" SortIndex="1" Width="150" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>Created</Name>
            <Id>TimeRaised</Id>
          </ColumnInfo>
          <ColumnInfo Index="8" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Age</Name>
            <Id>Age</Id>
          </ColumnInfo>
          <ColumnInfo Index="16" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Class</Name>
            <Id>Class</Id>
          </ColumnInfo>
          <ColumnInfo Index="35" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Repeat Count</Name>
            <Id>RepeatCount</Id>
          </ColumnInfo>
        </Presentation>
      </View>
      <View ID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.ManualReset.Closed" Accessibility="Internal" Target="SCOM.Addons.MailIn.MailMonitorItem.ManualReset" TypeID="SC!Microsoft.SystemCenter.AlertViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <SeverityList>
            <Severity>Warning</Severity>
            <Severity>Error</Severity>
          </SeverityList>
          <ResolutionState>
            <StateRange Operator="Equals">255</StateRange>
          </ResolutionState>
        </Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="22" Grouped="true" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Severity</Name>
            <Id>Severity</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="54" Grouped="false" Sorted="false" IsSortable="false" Visible="true" SortOrder="Ascending">
            <Name>Icon</Name>
            <Id>Icon</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>MonitoringObjectPath</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Source</Name>
            <Id>MonitoringObjectDisplayName</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" SortIndex="-1" Width="22" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Maintenance Mode</Name>
            <Id>MonitoringObjectInMaintenanceMode</Id>
          </ColumnInfo>
          <ColumnInfo Index="5" SortIndex="-1" Width="250" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Resolution State</Name>
            <Id>ResolutionState</Id>
          </ColumnInfo>
          <ColumnInfo Index="7" SortIndex="1" Width="150" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>Created</Name>
            <Id>TimeRaised</Id>
          </ColumnInfo>
          <ColumnInfo Index="8" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Age</Name>
            <Id>Age</Id>
          </ColumnInfo>
          <ColumnInfo Index="9" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Type</Name>
            <Id>Category</Id>
          </ColumnInfo>
          <ColumnInfo Index="10" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Owner</Name>
            <Id>Owner</Id>
          </ColumnInfo>
          <ColumnInfo Index="11" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Priority</Name>
            <Id>Priority</Id>
          </ColumnInfo>
          <ColumnInfo Index="12" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Latency</Name>
            <Id>Latency</Id>
          </ColumnInfo>
          <ColumnInfo Index="13" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Description</Name>
            <Id>Description</Id>
          </ColumnInfo>
          <ColumnInfo Index="14" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Connector</Name>
            <Id>ConnectorId</Id>
          </ColumnInfo>
          <ColumnInfo Index="15" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Forwarding Status</Name>
            <Id>ConnectorStatus</Id>
          </ColumnInfo>
          <ColumnInfo Index="16" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Class</Name>
            <Id>Class</Id>
          </ColumnInfo>
          <ColumnInfo Index="17" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Time in State</Name>
            <Id>TimeInState</Id>
          </ColumnInfo>
          <ColumnInfo Index="18" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 1</Name>
            <Id>CustomField1</Id>
          </ColumnInfo>
          <ColumnInfo Index="19" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 2</Name>
            <Id>CustomField2</Id>
          </ColumnInfo>
          <ColumnInfo Index="20" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 3</Name>
            <Id>CustomField3</Id>
          </ColumnInfo>
          <ColumnInfo Index="21" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 4</Name>
            <Id>CustomField4</Id>
          </ColumnInfo>
          <ColumnInfo Index="22" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 5</Name>
            <Id>CustomField5</Id>
          </ColumnInfo>
          <ColumnInfo Index="23" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 6</Name>
            <Id>CustomField6</Id>
          </ColumnInfo>
          <ColumnInfo Index="24" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 7</Name>
            <Id>CustomField7</Id>
          </ColumnInfo>
          <ColumnInfo Index="25" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 8</Name>
            <Id>CustomField8</Id>
          </ColumnInfo>
          <ColumnInfo Index="26" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 9</Name>
            <Id>CustomField9</Id>
          </ColumnInfo>
          <ColumnInfo Index="27" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 10</Name>
            <Id>CustomField10</Id>
          </ColumnInfo>
          <ColumnInfo Index="28" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Resolved By</Name>
            <Id>ResolvedBy</Id>
          </ColumnInfo>
          <ColumnInfo Index="29" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Time Resolved</Name>
            <Id>TimeResolved</Id>
          </ColumnInfo>
          <ColumnInfo Index="30" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Last State Change</Name>
            <Id>TimeResolutionStateLastModified</Id>
          </ColumnInfo>
          <ColumnInfo Index="31" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Last Modified</Name>
            <Id>LastModified</Id>
          </ColumnInfo>
          <ColumnInfo Index="32" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Last Modified By</Name>
            <Id>LastModifiedBy</Id>
          </ColumnInfo>
          <ColumnInfo Index="33" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Management Group</Name>
            <Id>ManagementGroup</Id>
          </ColumnInfo>
          <ColumnInfo Index="34" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Site</Name>
            <Id>SiteName</Id>
          </ColumnInfo>
          <ColumnInfo Index="35" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Repeat Count</Name>
            <Id>RepeatCount</Id>
          </ColumnInfo>
          <ColumnInfo Index="36" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Ticket ID</Name>
            <Id>TicketId</Id>
          </ColumnInfo>
          <ColumnInfo Index="37" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>TFS Work Item ID</Name>
            <Id>TfsWorkItemId</Id>
          </ColumnInfo>
          <ColumnInfo Index="38" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>TFS Work Item Owner</Name>
            <Id>TfsWorkItemOwner</Id>
          </ColumnInfo>
        </Presentation>
      </View>
      <View ID="SCOM.Addons.MailIn.State.SCOM.Addons.MailIn.MailMonitorItems.ManualReset" Accessibility="Internal" Target="SCOM.Addons.MailIn.MailMonitorItem.ManualReset" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <InMaintenanceMode>false</InMaintenanceMode>
        </Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="100" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>State</Name>
            <Id>SCOM.Addons.MailIn.MailMonitorItem.ManualReset</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>In Maintenance Mode</Name>
            <Id>InMaintenanceMode</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>Path</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Display Name</Name>
            <Id>System.Entity/DisplayName</Id>
          </ColumnInfo>
          <ColumnInfo Index="5" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Unique Title</Name>
            <Id>SCOM.Addons.MailIn.MailMonitorItem/UniqueTitle</Id>
          </ColumnInfo>
          <ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Description</Name>
            <Id>SCOM.Addons.MailIn.MailMonitorItem/Description</Id>
          </ColumnInfo>
          <ColumnInfo Index="7" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Mail From</Name>
            <Id>SCOM.Addons.MailIn.MailMonitorItem/MailFrom</Id>
          </ColumnInfo>
          <ColumnInfo Index="8" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Mail Subject</Name>
            <Id>SCOM.Addons.MailIn.MailMonitorItem/MailSubject</Id>
          </ColumnInfo>
          <ColumnInfo Index="9" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Mail Body</Name>
            <Id>SCOM.Addons.MailIn.MailMonitorItem/MailBody</Id>
          </ColumnInfo>
          <ColumnInfo Index="10" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Mail Source Server</Name>
            <Id>SCOM.Addons.MailIn.MailMonitorItem/MailSourceServer</Id>
          </ColumnInfo>
          <ColumnInfo Index="11" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>SCOM Alert Reset Type</Name>
            <Id>SCOM.Addons.MailIn.MailMonitorItem/SCOMAlertResetType</Id>
          </ColumnInfo>
          <ColumnInfo Index="12" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>SCOM Alert Monitor Reset (in Seconds)</Name>
            <Id>SCOM.Addons.MailIn.MailMonitorItem/SCOMAlertResetTimeInSeconds</Id>
          </ColumnInfo>
        </Presentation>
        <Target />
      </View>
      <View ID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.TimerReset" Accessibility="Internal" Target="SCOM.Addons.MailIn.MailMonitorItem.TimerReset" TypeID="SC!Microsoft.SystemCenter.AlertViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <SeverityList>
            <Severity>Warning</Severity>
            <Severity>Error</Severity>
          </SeverityList>
          <ResolutionState>
            <StateRange Operator="NotEquals">255</StateRange>
          </ResolutionState>
        </Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="22" Grouped="true" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Severity</Name>
            <Id>Severity</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="54" Grouped="false" Sorted="false" IsSortable="false" Visible="true" SortOrder="Ascending">
            <Name>Icon</Name>
            <Id>Icon</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>MonitoringObjectPath</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Source</Name>
            <Id>MonitoringObjectDisplayName</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" SortIndex="-1" Width="22" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Maintenance Mode</Name>
            <Id>MonitoringObjectInMaintenanceMode</Id>
          </ColumnInfo>
          <ColumnInfo Index="5" SortIndex="-1" Width="250" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Resolution State</Name>
            <Id>ResolutionState</Id>
          </ColumnInfo>
          <ColumnInfo Index="7" SortIndex="1" Width="150" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>Created</Name>
            <Id>TimeRaised</Id>
          </ColumnInfo>
          <ColumnInfo Index="8" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Age</Name>
            <Id>Age</Id>
          </ColumnInfo>
          <ColumnInfo Index="9" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Type</Name>
            <Id>Category</Id>
          </ColumnInfo>
          <ColumnInfo Index="10" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Owner</Name>
            <Id>Owner</Id>
          </ColumnInfo>
          <ColumnInfo Index="11" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Priority</Name>
            <Id>Priority</Id>
          </ColumnInfo>
          <ColumnInfo Index="12" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Latency</Name>
            <Id>Latency</Id>
          </ColumnInfo>
          <ColumnInfo Index="13" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Description</Name>
            <Id>Description</Id>
          </ColumnInfo>
          <ColumnInfo Index="14" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Connector</Name>
            <Id>ConnectorId</Id>
          </ColumnInfo>
          <ColumnInfo Index="15" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Forwarding Status</Name>
            <Id>ConnectorStatus</Id>
          </ColumnInfo>
          <ColumnInfo Index="16" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Class</Name>
            <Id>Class</Id>
          </ColumnInfo>
          <ColumnInfo Index="17" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Time in State</Name>
            <Id>TimeInState</Id>
          </ColumnInfo>
          <ColumnInfo Index="18" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 1</Name>
            <Id>CustomField1</Id>
          </ColumnInfo>
          <ColumnInfo Index="19" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 2</Name>
            <Id>CustomField2</Id>
          </ColumnInfo>
          <ColumnInfo Index="20" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 3</Name>
            <Id>CustomField3</Id>
          </ColumnInfo>
          <ColumnInfo Index="21" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 4</Name>
            <Id>CustomField4</Id>
          </ColumnInfo>
          <ColumnInfo Index="22" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 5</Name>
            <Id>CustomField5</Id>
          </ColumnInfo>
          <ColumnInfo Index="23" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 6</Name>
            <Id>CustomField6</Id>
          </ColumnInfo>
          <ColumnInfo Index="24" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 7</Name>
            <Id>CustomField7</Id>
          </ColumnInfo>
          <ColumnInfo Index="25" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 8</Name>
            <Id>CustomField8</Id>
          </ColumnInfo>
          <ColumnInfo Index="26" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 9</Name>
            <Id>CustomField9</Id>
          </ColumnInfo>
          <ColumnInfo Index="27" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 10</Name>
            <Id>CustomField10</Id>
          </ColumnInfo>
          <ColumnInfo Index="28" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Resolved By</Name>
            <Id>ResolvedBy</Id>
          </ColumnInfo>
          <ColumnInfo Index="29" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Time Resolved</Name>
            <Id>TimeResolved</Id>
          </ColumnInfo>
          <ColumnInfo Index="30" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Last State Change</Name>
            <Id>TimeResolutionStateLastModified</Id>
          </ColumnInfo>
          <ColumnInfo Index="31" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Last Modified</Name>
            <Id>LastModified</Id>
          </ColumnInfo>
          <ColumnInfo Index="32" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Last Modified By</Name>
            <Id>LastModifiedBy</Id>
          </ColumnInfo>
          <ColumnInfo Index="33" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Management Group</Name>
            <Id>ManagementGroup</Id>
          </ColumnInfo>
          <ColumnInfo Index="34" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Site</Name>
            <Id>SiteName</Id>
          </ColumnInfo>
          <ColumnInfo Index="35" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Repeat Count</Name>
            <Id>RepeatCount</Id>
          </ColumnInfo>
          <ColumnInfo Index="36" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Ticket ID</Name>
            <Id>TicketId</Id>
          </ColumnInfo>
          <ColumnInfo Index="37" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>TFS Work Item ID</Name>
            <Id>TfsWorkItemId</Id>
          </ColumnInfo>
          <ColumnInfo Index="38" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>TFS Work Item Owner</Name>
            <Id>TfsWorkItemOwner</Id>
          </ColumnInfo>
        </Presentation>
      </View>
      <View ID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.ManualReset" Accessibility="Internal" Target="SCOM.Addons.MailIn.MailMonitorItem.ManualReset" TypeID="SC!Microsoft.SystemCenter.AlertViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <SeverityList>
            <Severity>Warning</Severity>
            <Severity>Error</Severity>
          </SeverityList>
          <ResolutionState>
            <StateRange Operator="NotEquals">255</StateRange>
          </ResolutionState>
        </Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="22" Grouped="true" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Severity</Name>
            <Id>Severity</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="54" Grouped="false" Sorted="false" IsSortable="false" Visible="true" SortOrder="Ascending">
            <Name>Icon</Name>
            <Id>Icon</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>MonitoringObjectPath</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Source</Name>
            <Id>MonitoringObjectDisplayName</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" SortIndex="-1" Width="22" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Maintenance Mode</Name>
            <Id>MonitoringObjectInMaintenanceMode</Id>
          </ColumnInfo>
          <ColumnInfo Index="5" SortIndex="-1" Width="250" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Resolution State</Name>
            <Id>ResolutionState</Id>
          </ColumnInfo>
          <ColumnInfo Index="7" SortIndex="1" Width="150" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>Created</Name>
            <Id>TimeRaised</Id>
          </ColumnInfo>
          <ColumnInfo Index="8" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Age</Name>
            <Id>Age</Id>
          </ColumnInfo>
          <ColumnInfo Index="9" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Type</Name>
            <Id>Category</Id>
          </ColumnInfo>
          <ColumnInfo Index="10" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Owner</Name>
            <Id>Owner</Id>
          </ColumnInfo>
          <ColumnInfo Index="11" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Priority</Name>
            <Id>Priority</Id>
          </ColumnInfo>
          <ColumnInfo Index="12" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Latency</Name>
            <Id>Latency</Id>
          </ColumnInfo>
          <ColumnInfo Index="13" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Description</Name>
            <Id>Description</Id>
          </ColumnInfo>
          <ColumnInfo Index="14" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Connector</Name>
            <Id>ConnectorId</Id>
          </ColumnInfo>
          <ColumnInfo Index="15" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Forwarding Status</Name>
            <Id>ConnectorStatus</Id>
          </ColumnInfo>
          <ColumnInfo Index="16" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Class</Name>
            <Id>Class</Id>
          </ColumnInfo>
          <ColumnInfo Index="17" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Time in State</Name>
            <Id>TimeInState</Id>
          </ColumnInfo>
          <ColumnInfo Index="18" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 1</Name>
            <Id>CustomField1</Id>
          </ColumnInfo>
          <ColumnInfo Index="19" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 2</Name>
            <Id>CustomField2</Id>
          </ColumnInfo>
          <ColumnInfo Index="20" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 3</Name>
            <Id>CustomField3</Id>
          </ColumnInfo>
          <ColumnInfo Index="21" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 4</Name>
            <Id>CustomField4</Id>
          </ColumnInfo>
          <ColumnInfo Index="22" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 5</Name>
            <Id>CustomField5</Id>
          </ColumnInfo>
          <ColumnInfo Index="23" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 6</Name>
            <Id>CustomField6</Id>
          </ColumnInfo>
          <ColumnInfo Index="24" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 7</Name>
            <Id>CustomField7</Id>
          </ColumnInfo>
          <ColumnInfo Index="25" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 8</Name>
            <Id>CustomField8</Id>
          </ColumnInfo>
          <ColumnInfo Index="26" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 9</Name>
            <Id>CustomField9</Id>
          </ColumnInfo>
          <ColumnInfo Index="27" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 10</Name>
            <Id>CustomField10</Id>
          </ColumnInfo>
          <ColumnInfo Index="28" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Resolved By</Name>
            <Id>ResolvedBy</Id>
          </ColumnInfo>
          <ColumnInfo Index="29" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Time Resolved</Name>
            <Id>TimeResolved</Id>
          </ColumnInfo>
          <ColumnInfo Index="30" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Last State Change</Name>
            <Id>TimeResolutionStateLastModified</Id>
          </ColumnInfo>
          <ColumnInfo Index="31" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Last Modified</Name>
            <Id>LastModified</Id>
          </ColumnInfo>
          <ColumnInfo Index="32" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Last Modified By</Name>
            <Id>LastModifiedBy</Id>
          </ColumnInfo>
          <ColumnInfo Index="33" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Management Group</Name>
            <Id>ManagementGroup</Id>
          </ColumnInfo>
          <ColumnInfo Index="34" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Site</Name>
            <Id>SiteName</Id>
          </ColumnInfo>
          <ColumnInfo Index="35" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Repeat Count</Name>
            <Id>RepeatCount</Id>
          </ColumnInfo>
          <ColumnInfo Index="36" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Ticket ID</Name>
            <Id>TicketId</Id>
          </ColumnInfo>
          <ColumnInfo Index="37" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>TFS Work Item ID</Name>
            <Id>TfsWorkItemId</Id>
          </ColumnInfo>
          <ColumnInfo Index="38" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>TFS Work Item Owner</Name>
            <Id>TfsWorkItemOwner</Id>
          </ColumnInfo>
        </Presentation>
      </View>
      <View ID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.Rule" Accessibility="Internal" Target="SCOM.Addons.MailIn.MonitoringServer" TypeID="SC!Microsoft.SystemCenter.AlertViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <SeverityList>
            <Severity>Warning</Severity>
            <Severity>Error</Severity>
          </SeverityList>
          <ResolutionState>
            <StateRange Operator="NotEquals">255</StateRange>
          </ResolutionState>
        </Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="22" Grouped="true" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Severity</Name>
            <Id>Severity</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="54" Grouped="false" Sorted="false" IsSortable="false" Visible="true" SortOrder="Ascending">
            <Name>Icon</Name>
            <Id>Icon</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>MonitoringObjectPath</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Source</Name>
            <Id>MonitoringObjectDisplayName</Id>
          </ColumnInfo>
          <ColumnInfo Index="5" SortIndex="-1" Width="250" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Resolution State</Name>
            <Id>ResolutionState</Id>
          </ColumnInfo>
          <ColumnInfo Index="7" SortIndex="1" Width="150" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>Created</Name>
            <Id>TimeRaised</Id>
          </ColumnInfo>
          <ColumnInfo Index="8" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Age</Name>
            <Id>Age</Id>
          </ColumnInfo>
          <ColumnInfo Index="16" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Class</Name>
            <Id>Class</Id>
          </ColumnInfo>
          <ColumnInfo Index="35" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Repeat Count</Name>
            <Id>RepeatCount</Id>
          </ColumnInfo>
        </Presentation>
      </View>
    </Views>
    <Folders>
      <Folder ID="SCOM.Addons.MailIn.Folder" Accessibility="Internal" ParentFolder="SC!Microsoft.SystemCenter.Monitoring.ViewFolder.Root" />
      <Folder ID="SCOM.Addons.MailIn.Folder.ClosedAlerts" Accessibility="Internal" ParentFolder="SCOM.Addons.MailIn.Folder" />
    </Folders>
    <FolderItems>
      <FolderItem ElementID="SCOM.Addons.MailIn.State.SCOM.Addons.MailIn.MailMonitorItems.TimerReset" Folder="SCOM.Addons.MailIn.Folder" ID="SCOM.Addons.MailIn.State.SCOM.Addons.MailIn.MailMonitorItems.TimerReset.FolderItem" />
      <FolderItem ElementID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.TimerReset.Closed" Folder="SCOM.Addons.MailIn.Folder.ClosedAlerts" ID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.TimerReset.Closed.FolderItem" />
      <FolderItem ElementID="SCOM.Addons.MailIn.State.SCOM.Addons.MailIn.MonitoringServer" Folder="SCOM.Addons.MailIn.Folder" ID="SCOM.Addons.MailIn.State.SCOM.Addons.MailIn.MonitoringServer.FolderItem" />
      <FolderItem ElementID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.Rule.Closed" Folder="SCOM.Addons.MailIn.Folder.ClosedAlerts" ID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.Rule.Closed.FolderItem" />
      <FolderItem ElementID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.ManualReset.Closed" Folder="SCOM.Addons.MailIn.Folder.ClosedAlerts" ID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.ManualReset.Closed.FolderItem" />
      <FolderItem ElementID="SCOM.Addons.MailIn.State.SCOM.Addons.MailIn.MailMonitorItems.ManualReset" Folder="SCOM.Addons.MailIn.Folder" ID="SCOM.Addons.MailIn.State.SCOM.Addons.MailIn.MailMonitorItems.ManualReset.FolderItem" />
      <FolderItem ElementID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.TimerReset" Folder="SCOM.Addons.MailIn.Folder" ID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.TimerReset.FolderItem" />
      <FolderItem ElementID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.ManualReset" Folder="SCOM.Addons.MailIn.Folder" ID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.ManualReset.FolderItem" />
      <FolderItem ElementID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.Rule" Folder="SCOM.Addons.MailIn.Folder" ID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.Rule.FolderItem" />
    </FolderItems>
    <ImageReferences>
      <ImageReference ElementID="SCOM.Addons.MailIn.MailMonitorItem.ManualReset" ImageID="SCOM.Addons.MailIn.MailMonitorItem.ManualReset.Icon" />
      <ImageReference ElementID="SCOM.Addons.MailIn.MailMonitorItem.TimerReset" ImageID="SCOM.Addons.MailIn.MailMonitorItem.TimerReset.Icon" />
    </ImageReferences>
    <StringResources>
      <StringResource ID="SCOM.Addons.MailIn.Generic.Alert.Rule.AlertMessage" />
      <StringResource ID="SCOM.Addons.MailIn.CleanEmlArchive.Rule.AlertMessage" />
      <StringResource ID="SCOM.Addons.MailIn.CloseAlerts.Rule.AlertMessage" />
      <StringResource ID="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MonitoringServer.SmtpSerivce.AlertMessage" />
      <StringResource ID="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MailItem.TimerReset.AlertMessage" />
      <StringResource ID="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MailItem.ManualReset.AlertMessage" />
    </StringResources>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="SCOM.Addons.MailIn.Generic.Alert.Rule">
          <Name>MailIn Generic Alert Rule</Name>
          <Description>Creates generic alerts for E-Mails that are sent to SCOM.</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Generic.Alert.Rule.AlertMessage">
          <Name>MailIn Generic Alert ( {1} )</Name>
          <Description>
						From:
						{1}

						Subject:
						{0}

						Body:
						{2}

						MetaInfo:
						{3}
					</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.CleanEmlArchive.Rule">
          <Name>MailIn Generic CleanEmlArchive.Rule</Name>
          <Description>Removes archived eml files in archive folder older than confiugured retention. </Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.CleanEmlArchive.Rule.AlertMessage">
          <Name>MailIn Clean EmlArchive Rule</Name>
          <Description>
						Title:
						{0}

						Eml Files in Archive:
						{1}

						Deleted Eml File Number:
						{2}

						Deleted Eml File details:
						{3}
					</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.CloseAlerts.Rule">
          <Name>MailIn CloseAlerts.Rule</Name>
          <Description>Closes Generic Mail Alerts older than confiugured retention.</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.CloseAlerts.Rule.AlertMessage">
          <Name>MailIn Close Alerts Rule</Name>
          <Description>
						Title:
						{0}

						Generic Alert Info:
						{1}

						Clean EmlArchive Alert Info
						{2}

						ClosedAlerts Alert Info:
						{3}
					</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MonitoringServer.SmtpSerivce">
          <Name>Smtp Service Mointor (SCOM Addons MailIn)</Name>
          <Description>Monitors the SMTP Service</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MonitoringServer.SmtpSerivce.AlertMessage">
          <Name>Smtp Server Monitor (SCOM Addons MailIn)</Name>
          <Description>Smtp Service down!

No alerts via MailIn can be generated.</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MonitoringServer.SmtpSerivce" SubElementID="Running">
          <Name>Running</Name>
          <Description>Running</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MonitoringServer.SmtpSerivce" SubElementID="NotRunning">
          <Name>NotRunning</Name>
          <Description>NotRunning</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MailItem.TimerReset">
          <Name>MailItem Monitor - Timer Reset (SCOM Addons MailIn)</Name>
          <Description>Reacts on emails matching the configured pattern. Specified timer value will reset automatically.</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MailItem.TimerReset.AlertMessage">
          <Name>MailItem - TimerReset - {0}</Name>
          <Description>Mailitem - TimerReset - Issues

UniqueTitle:  {0}

MailSubject:  {1}

MailFrom:  {2}

MailBody:  {3}

MailSourceServer:  {4}

mMetaInfo:  {5}</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MailItem.TimerReset" SubElementID="Success">
          <Name>Success</Name>
          <Description>Success</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MailItem.TimerReset" SubElementID="Failure">
          <Name>Failure</Name>
          <Description>Failure</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MailItem.ManualReset">
          <Name>MailItem Monitor - Manual Reset (SCOM Addons MailIn)</Name>
          <Description>Reacts on emails matching the configured pattern. Requires SCOM Admin reset.</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MailItem.ManualReset.AlertMessage">
          <Name>MailItem - ManualReset - {0}</Name>
          <Description>Mailitem - ManualReset - Issues

UniqueTitle: {0}

MailSubject:  {1}

MailFrom:  {2}

MailBody:  {3}

MailSourceServer:  {4}

mMetaInfo:  {5}
</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MailItem.ManualReset" SubElementID="Success">
          <Name>Success</Name>
          <Description>Success</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Monitor.SCOM.Addons.MailIn.MailItem.ManualReset" SubElementID="Failure">
          <Name>Failure</Name>
          <Description>Failure</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Folder">
          <Name>SCOM Addons MailIn</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Folder.ClosedAlerts">
          <Name>Closed Alerts</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.State.SCOM.Addons.MailIn.MailMonitorItems.TimerReset">
          <Name>MonitorItems - Timer Reset</Name>
          <Description>Description for the new view</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.TimerReset.Closed">
          <Name>MailItems - Timer Reset</Name>
          <Description>Description for the new view</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.State.SCOM.Addons.MailIn.MonitoringServer">
          <Name>Monitor Server - SMTP Service</Name>
          <Description>Description for the new view</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.Rule.Closed">
          <Name>Generic Mail Alerts </Name>
          <Description>Description for the new view</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.ManualReset.Closed">
          <Name>Mailitems - Manual Reset</Name>
          <Description>Description for the new view</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.State.SCOM.Addons.MailIn.MailMonitorItems.ManualReset">
          <Name>MonitorItems - Manual Reset</Name>
          <Description>Description for the new view</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.TimerReset">
          <Name>MailItems - Timer Reset</Name>
          <Description>Description for the new view</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.ManualReset">
          <Name>Mailitems - Manual Reset</Name>
          <Description>Description for the new view</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Alert.SCOM.Addons.MailIn.MonitoringServer.Rule">
          <Name>Generic Mail Alerts</Name>
          <Description>Description for the new view</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn">
          <Name>SCOM Addons MailIn</Name>
          <Description>Adds E-Mail as input channel for creating alerts or for dedicated monitors through XML Config file.</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.MonitoringServer">
          <Name>Monitoring Server</Name>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.MonitoringServer" SubElementID="XMLConfigFilePath">
          <Name>XML Config File Path</Name>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.MonitoringServer" SubElementID="SmtpServerName">
          <Name>SmtpServerNmae</Name>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.MonitoringServer" SubElementID="EmlDirectory">
          <Name>Eml Directory</Name>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.MonitoringServer" SubElementID="EmlArchive">
          <Name>Eml Archive</Name>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.MailMonitorItem">
          <Name>MailMonitor Item</Name>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.MailMonitorItem" SubElementID="SCOMAlertResetType">
          <Name>SCOM Alert Reset Type</Name>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.MailMonitorItem" SubElementID="Description">
          <Name>Description</Name>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.MailMonitorItem" SubElementID="MailBody">
          <Name>Mail Body</Name>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.MailMonitorItem" SubElementID="MailFrom">
          <Name>Mail From</Name>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.MailMonitorItem" SubElementID="MailSourceServer">
          <Name>Mail Source Server</Name>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.MailMonitorItem" SubElementID="MailSubject">
          <Name>Mail Subject</Name>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.MailMonitorItem" SubElementID="UniqueTitle">
          <Name>Unique Title</Name>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.MailMonitorItem" SubElementID="SCOMAlertResetTimeInSeconds">
          <Name>SCOM Alert Monitor Reset (in Seconds)</Name>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.MailMonitorItem.ManualReset">
          <Name>MailMonitorItem ManualReset</Name>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.MailMonitorItem.TimerReset">
          <Name>MailMonitorItem TimerReset</Name>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Discovery.SCOM.Addons.MailIn.MonitoringServer">
          <Name>Discover MailIn MonitoringServer (SCOM Addons MailIn)</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="SCOM.Addons.MailIn.Discovery.SCOM.Addons.MailIn.MailMonitorItems">
          <Name>Discover MailIn MailMonitorItems</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
      </DisplayStrings>
      <KnowledgeArticles></KnowledgeArticles>
    </LanguagePack>
  </LanguagePacks>
  <Resources>
    <Image ID="SCOM.Addons.MailIn.MailMonitorItem.ManualReset.Icon" FileName="MailItem-Manual.png" Accessibility="Public" HasNullStream="false" Comment="MailItem-Monitor-ManualReset" />
    <Image ID="SCOM.Addons.MailIn.MailMonitorItem.TimerReset.Icon" FileName="MailItem-Timer.png" Accessibility="Public" HasNullStream="false" Comment="MailItem-Monitor-TimerReset" />
  </Resources>
</ManagementPack>